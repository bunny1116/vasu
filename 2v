@model WF.ERMT.Application.Entities.CustomEntities.PEPEntity
@{
    ViewBag.Title = "PEPDeterminationForm";
    Layout = "~/Views/Shared/layout.cshtml";
}
@*<link rel="stylesheet" href="//code.jquery.com/ui/1.12.0/themes/base/jquery-ui.css" />
<link rel="stylesheet" href="/resources/demos/style.css" />
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.0/jquery-ui.js"></script>*@

　
@Styles.Render("~/bundles/css")

@Html.Partial("PEPLeftMenu")
<input type="hidden" id="selectedRole" value="@HttpContext.Current.Session["SelectedRole"].ToString()" />
<div class="RightContainer">

    <div class="ms-core-pageTitle">
        <div class="col-lg-6" @if (!((Model.PepRequestStatus == null) && (HttpContext.Current.Session["SelectedRole"].ToString() == "LOB - Line of Business(PEP)"))) { @Html.Raw("style='display:none' ")   }>
            Create New PEP Request
        </div>
        <div>
            <label class="control-label col-sm-12" id="mandatoryfieldslabel" style="text-align: right; font-size: 10px; font-weight: normal; color:red">
                *  Mandatory fields
            </label>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-sm-12" style="font-weight:bold;text-align:center">
            @if (Model.success)
            {
                <span style="color:Green">
                    @Html.ValidationMessage("Success", new { style = "font-size:16px" })
                </span>
                <br />
                if ((Model.PepRequestStatus == "Pending") && (HttpContext.Current.Session["SelectedRole"].ToString() == "LOB - Line of Business(PEP)"))
                {
                    <span>Do you want to add another PEP Request?</span>
                    @Html.Raw("&nbsp; &nbsp; &nbsp;");
                    @Html.ActionLink("Yes", "PEPDeterminationSearchForm", "PEPDetails", new { typeofSearch = "Normal" }, new { @class = "blueunderlinedlink" }); @Html.Raw("&nbsp; &nbsp; &nbsp;");
                    @Html.ActionLink("No", "LOBDasboardPage", "PEPDetails", new { }, new { @class = "blueunderlinedlink" });
                }
            }
            else
            {
                <span style="color:Red">
                    @Html.ValidationMessage("Failure", new { style = "font-size:16px" })
                </span>
            }
            <span style="color:Red">
                @Html.ValidationMessage("ModelStateNotValid", new { style = "font-size:14px" })
            </span>
        </div>
    </div>
    <form action='@Url.Action("SavePEPDeterminationForm", "PEPDetails")' method="post" id="formDetails" enctype="multipart/form-data">
        <div class="panel-group" id="accordion">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 class="panel-title" style="font-size:1.3em">
                        PEP Request Detail  <img src="@Url.Content("/Contents/images/ExpandLess.png")" data-swap="@Url.Content("/Contents/images/ExpandMore.png")" data-src="@Url.Content("/Contents/images/ExpandLess.png")" id="Displaypep" style="float:right;display:none" alt="less" class="menu-down" />@*<span class="glyphicon glyphicon-menu-down" id="Displaypep" style="float:right; display:none"></span>*@
                    </h4>
                </div>

                <div class="panel-body" style="font-family:Verdana" id="pepdetailssection">
                    <div class="container" id="formDetailsTable">
                        <div class="row">
                            <div class="col-sm-3">PEP ID#</div>
                            <div class="col-sm-3"><input type="text" class="form-control input-normal input-sm" id="pepid" name="PepId" readonly value='@if (Model.PepId == 0) { } else {@Model.PepId }' /></div>
                            @if (Model.CRId != 0)
                            {
                                <div class="col-sm-3">CR No</div>
                                <div class="col-sm-3">
                                    <input type="text" class="form-control input-normal input-sm" id="crno" name="CrNo" readonly value='@if (Model.CRId == 0) { }
                            else {@Model.CrNo }' />
                                    <input type="hidden" class="form-control input-normal input-sm" id="crid" name="CRId" readonly value='@Model.CRId'/>
                                </div>
                            }
                            <div class="col-sm-3">  Request Status</div>
                            <div class="col-sm-3">
                                <input type="text" disabled="disabled" class="form-control input-normal input-sm" style="" id="requeststatusid" name="PepRequestStatus" value='@Model.PepRequestStatus' />

                                
                                <input type="hidden" id="requeststatustxtid" name="PepRequestStatus" value='@Model.PepRequestStatus' />
                                <input type="hidden" id="requeststatusid" name="PepRequestStatusId" value='@Model.PepRequestStatusId' />
                                <input type="hidden" id="previousrequeststatusid" name="PreviousPepRequestStatusid" value='@Model.PreviousPepRequestStatusid' />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-3">Service Request Type<span class="asterik">&#42;</span></div>
                            <div class="col-sm-3">
                                <select name="ServiceRequestTypeId" class="form-control">
                                    @foreach (var request in (List<WF.ERMT.Application.Entities.CustomEntities.ServiceRequestTypeEntity>)ViewData["ServiceRequestTypes"])
                                    {
                                        <option value="@request.RequestID" @if (request.RequestID.ToString() == Model.ServiceRequestTypeId.ToString()) { @Html.Raw("selected")         }>
                                            @request.Name
                                        </option>

                                    }
                                </select>
                                @Html.ValidationMessage("ServiceRequestTypeId", "", new { @class = "text-danger", style = "font-size:12px" })
                            </div>
                        </div>

                        <div class="row formSectionHeaderRowDiv">
                            <div class="col-sm-12 formSectionHeaderTextDiv">
                                Customer Detail
                                <img src="@Url.Content("/Contents/images/ExpandLess.png")" data-target="customersection" data-swap="@Url.Content("/Contents/images/ExpandMore.png")" data-src="@Url.Content("/Contents/images/ExpandLess.png")" id="DisplayCustomerSection" style="float:right" alt="less" class="menu-down" />
                            </div>
                        </div>
                        <div id="customersection">
                            <div class="row">
                                <div class="col-sm-3"> Customer Name<span class="asterik">&#42;</span></div>
                                <div class="col-sm-3">
                                    <input type="text" class="form-control input-normal input-sm" id="cipdid" name="Customer_Name" value='@Model.Customer_Name' />
                                  
                                </div>
                                <div class="col-sm-3"> Customer Status</div>
                                <div class="col-sm-3">
                                    @Html.DropDownList("CustomerStatusId", new SelectList((System.Collections.IEnumerable)ViewData["CustomerStatus"], "StatusId", "Status"), new { @class = "form-control", name = "CustomerStatusId", id = "CustomerStatusId" })
                                    <input type="hidden" class="form-control input-normal input-sm" value='@Model.CustomerStatusId' />
                                   
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-3">
                                    Select One<span class="asterik">&#42;</span>
                                </div>
                                <div class="col-sm-3">
                                    @foreach (var item in (List<string>)ViewData["CustomerType"])
                                    {
                                        <input type="radio" name="CustomerType" id="CustomerType" @if (item == Model.CustomerType) { @Html.Raw("checked")       } else if (item == "Entity") { @Html.Raw("checked")       } value="@item" />
                                        @Html.DisplayFor(m => item)
                                        @Html.Raw("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
                                    }
                                </div>
                            </div>
                            <div class="row" data-id="EntityCustomer" @if (Model.CustomerType == "Individual") { @Html.Raw("style='display:none' ")             }>
                                <div class="col-sm-3">
                                    PEP Entity Name<span class="asterik">&#42;</span>
                                </div>
                                <div class="col-sm-3">
                                    <input type="text" class="form-control input-normal input-sm" id="PEPEntityId" name="PEPEntityName" value='@Model.PEPEntityName' />
                                   
                                </div>
                            </div>

　
                            <div class="row" data-id="EntityCustomer" @if (Model.CustomerType == "Individual") { @Html.Raw("style='display:none' ")              }>
                                <div class="row innerRow">
                                    <div class="col-sm-3">
                                        Entity Formation Country<span class="asterik">&#42;</span>
                                    </div>
                                    <div class="col-sm-3">
                                        <select name="EntityFormationCountry" id="EntityFormationCountry1" onchange="javascript: PopulateEntityFormationCountryRiskDesignation(this);" class="form-control">
                                            @foreach (var efcountry in (List<WF.ERMT.Application.Entities.CustomEntities.CountryEntity>)ViewData["Countries"])
                                            {
                                                <option value="@efcountry.CountryID" @if (efcountry.CountryID == -1) { @Html.Raw("data-efrisk-designation='' ")     } else { @Html.Raw(" data-efrisk-designation='" + @efcountry.CountryRiskDesignation.RiskDesignation + "' ")      } @if (efcountry.CountryID.ToString() == Model.EntityFormationCountry) { @Html.Raw(" selected")     }>
                                                    @efcountry.Country
                                                </option>
                                            }
                                        </select>
                                        
                                    </div>

                                    <div class="col-sm-3">Country Risk Designation</div>
                                    <div class="col-sm-3">
                                        <input type="text" class="form-control input-normal input-sm" id=" efriskdesignationid" name="EntityFormationCountryRiskDesignationtxt"
                                               disabled="disabled" value='@Model.EntityFormationCountryRiskDesignation' />
                                        <input type="hidden" id=" riskdesignationidtxt" name="EntityFormationCountryRiskDesignation" value='@Model.EntityFormationCountryRiskDesignation' />

                                    </div>
                                </div>
                                <div class="row innerRow">
                                    <div class="col-sm-3" data-id="efbsaapprovallabel" @if ((Model.EntityFormationCountryRiskDesignation != "High")) { @Html.Raw("style='display:none' ")          }>BSA Approval Received</div>
                                    <div class="col-sm-3" data-id="efbsaapproval" @if ((Model.EntityFormationCountryRiskDesignation != "High")) { @Html.Raw("style='display:none' ")          }>
                                        <select name="EntityFormationCountryBSAApproval" onchange="javascript: ShoworHideEntityFormationCountryDivsOnBSAApprovalSelection(this);" class="form-control">
                                            @foreach (var bsaapproval in (List<WF.ERMT.Application.Entities.CustomEntities.BSAApprovalEntity>)ViewData["BSAApprovals"])
                                            {
                                                <option value="@bsaapproval.BSAApprovalId" @if (bsaapproval.BSAApprovalId.ToString() == Model.EntityFormationCountryBSAApproval) { @Html.Raw("selected")             }>
                                                    @bsaapproval.Status
                                                </option>
                                            }
                                        </select>
                                    </div>
                                    <div class="col-sm-1" data-id="efmultiloblabel" @if ((Model.EntityFormationCountryBSAApproval != "1")) { @Html.Raw("style='display:none' ")   }> LOB </div>
                                    <div class="col-sm-3" data-id="efmultilabel" @if ((Model.EntityFormationCountryBSAApproval != "1")) { @Html.Raw("style='display:none' ")            }>
                                        <select multiple name="EntityFormationCountryLOB" class="form-control">
                                            @foreach (var multilob in (List<WF.ERMT.Application.Entities.CustomEntities.LobEntity>)ViewData["Lobs"])
                                            {
                                                <option value="@multilob.LobId" @if (Model.EntityFormationCountryLOB != null) { if (Model.EntityFormationCountryLOB.Contains(multilob.LobId.ToString())) { @Html.Raw("selected")         } }>
                                                    @multilob.LobName
                                                </option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row" data-id="IndividualCustomer" @if (!(Model.CustomerType == "Individual")) { @Html.Raw("style='display:none' ")             }>

                                <div class="row innerRow">
                                    <div class="col-sm-3">
                                        Individual Name<span class="asterik">&#42;</span>
                                    </div>
                                    <div class="col-sm-3">
                                        Last Name<span class="asterik">&#42;</span>
                                        <input type="text" @*placeholder="Last Name&#42;"*@ class="form-control input-normal input-sm" id="IndividualLastNameId" name="IndividualLastName" value='@Model.IndividualLastName' />
                                        @Html.ValidationMessage("IndividualLastName", "", new { @class = "text-danger", style = "font-size:12px" })
                                    </div>
                                    <div class="col-sm-3">
                                        First Name<span class="asterik">&#42;</span>
                                        <input type="text" @*placeholder="First Name&#42;"*@ class="form-control input-normal input-sm" id="IndividualFirstNameId" name="IndividualFirstName" value='@Model.IndividualFirstName' />
                                        @Html.ValidationMessage("IndividualFirstName", "", new { @class = "text-danger", style = "font-size:12px" })
                                    </div>
                                    <div class="col-sm-3">
                                        AKA Name<span class="asterik">&#42;</span>
                                        <input type="text" @*placeholder="AKA Name&#42;"*@ class="form-control input-normal input-sm" id="IndividualAKANameId" name="IndividualAKAName" value='@Model.IndividualAKAName' />
                                        @Html.ValidationMessage("IndividualAKAName", "", new { @class = "text-danger", style = "font-size:12px" })
                                    </div>
                                </div>
                                <div class="row innerRow">
                                    <div class="col-sm-3">
                                    </div>
                                    <div class="col-sm-3">
                                        Middle Name
                                        <input type="text" @*placeholder="Middle Name"*@ class="form-control input-normal input-sm" id="IndividualMiddleNameId" name="IndividualMiddleName" value='@Model.IndividualMiddleName' />
                                        @Html.ValidationMessage("IndividualMiddleName", "", new { @class = "text-danger", style = "font-size:12px" })
                                    </div>
                                    <div class="col-sm-3">
                                        Last Name2
                                        <input type="text" @*placeholder="Last Name2"*@ class="form-control input-normal input-sm" id="IndividualLastName2Id" name="IndividualLastName2" value='@Model.IndividualLastName2' />
                                    </div>
                                </div>
                                <div class="row innerRow">
                                    <div class="col-sm-3">
                                        Date of Birth
                                    </div>
                                    <div class="col-sm-3">
                                        <input type="text" class="form-control input-normal input-sm" id="IndividualDoB" name="IndividualDoB" value='@Model.DateofBirth' />
                                    </div>

                                </div>

                                <div class="row innerRow">

                                    <div class="col-sm-3">
                                        Customer Citizenship<span class="asterik">&#42;</span>
                                    </div>
                                    <div class="col-sm-3">
                                        <select name="CountryofcitizenshipId" id="CountryofcitizenshipId1" onchange="javascript: PopulateCountryofcitizenshipRiskDesignation(this);" class="form-control">
                                            @foreach (var cccountry in (List<WF.ERMT.Application.Entities.CustomEntities.CountryEntity>)ViewData["Countries"])
                                            {
                                                <option value="@cccountry.CountryID" @if (cccountry.CountryID == -1) { @Html.Raw("data-ccrisk-designation='' ")      } else { @Html.Raw(" data-ccrisk-designation='" + @cccountry.CountryRiskDesignation.RiskDesignation + "' ")       } @if (cccountry.CountryID == Model.CountryofcitizenshipId) { @Html.Raw(" selected")      }>
                                                    @cccountry.Country
                                                </option>
                                            }
                                        </select>
                                        @Html.ValidationMessage("CountryofcitizenshipId", "", new { @class = "text-danger", style = "font-size:12px" })
                                    </div>
                                    <div class="col-sm-3">Country Risk Designation</div>
                                    <div class="col-sm-3">
                                        <input type="text" class="form-control input-normal input-sm" id=" ccriskdesignationid" name="CountryofcitizenshipRiskDesignationtxt"
                                               disabled="disabled" value='@Model.CountryofcitizenshipRiskDesignation' />
                                        <input type="hidden" id=" riskdesignationidtxt" name="CountryofcitizenshipRiskDesignation" value='@Model.CountryofcitizenshipRiskDesignation' />

                                    </div>
                                </div>
                                <div class="row innerRow">
                                    <div class="col-sm-3" data-id="ccbsaapprovallabel" @if ((Model.CountryofcitizenshipRiskDesignation != "High")) { @Html.Raw("style='display:none' ")           }>BSA Approval Received</div>
                                    <div class="col-sm-3" data-id="ccbsaapproval" @if ((Model.CountryofcitizenshipRiskDesignation != "High")) { @Html.Raw("style='display:none' ")           }>
                                        <select name="CountryofcitizenshipBSAApproval" onchange="javascript: ShoworHideCountryofcitizenshipDivsOnBSAApprovalSelection(this);" class="form-control">
                                            @foreach (var bsaapproval in (List<WF.ERMT.Application.Entities.CustomEntities.BSAApprovalEntity>)ViewData["BSAApprovals"])
                                            {
                                                <option value="@bsaapproval.BSAApprovalId" @if (bsaapproval.BSAApprovalId.ToString() == Model.CountryofcitizenshipBSAApproval) { @Html.Raw("selected")              }>
                                                    @bsaapproval.Status
                                                </option>
                                            }
                                        </select>
                                    </div>
                                    <div class="col-sm-1" data-id="ccmultiloblabel" @if ((Model.CountryofcitizenshipBSAApproval != "1")) { @Html.Raw("style='display:none' ")    }> LOB </div>
                                    <div class="col-sm-3" data-id="ccmultilabel" @if ((Model.CountryofcitizenshipBSAApproval != "1")) { @Html.Raw("style='display:none' ")             }>
                                        <select multiple name="CountryofcitizenshipLOB" class="form-control">
                                            @foreach (var multilob in (List<WF.ERMT.Application.Entities.CustomEntities.LobEntity>)ViewData["Lobs"])
                                            {
                                                <option value="@multilob.LobId" @if (Model.CountryofcitizenshipLOB != null) { if (Model.CountryofcitizenshipLOB.Contains(multilob.LobId.ToString())) { @Html.Raw("selected")          } }>
                                                    @multilob.LobName
                                                </option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row formSectionHeaderRowDiv">
                            <div class="col-sm-12 formSectionHeaderTextDiv">
                                ECN Detail
                                <img src="@Url.Content("/Contents/images/ExpandLess.png")" data-target="ecnsection" data-swap="@Url.Content("/Contents/images/ExpandMore.png")" data-src="@Url.Content("/Contents/images/ExpandLess.png")" id="DisplayCustomerSection" style="float:right" alt="less" class="menu-down" />
                            </div>
                        </div>

                        <div id="ecnsection">
                            @for (int ecncount = 0; ecncount < Model.ECN.Count; ecncount++)
                            {
                                if ((ecncount > 0) && (Model.ECN[ecncount] == "") && (Model.Flagged[ecncount] == "") && (Model.DateFlagged[ecncount] == "") && (Model.ECN.Count > 1))
                                {
                                    ecncount++;
                                    continue;
                                }

                                <div class="row" data-id='ecnrow'>
                                    <div class="innerRow">
                                        <div class="col-sm-3" data-id="ecnlabel">
                                            @if (ecncount == 0)
                                        { @Html.Raw("ECN# - Primary")}
                                        else { @Html.Raw("ECN# - Secondary")}
                                    </div>
                                    <div class="col-sm-3">
                                        <input type="text" class="form-control input-normal input-sm" id="ecnid" name="ECN" value="@Model.ECN[ecncount]" />
                                        @*@Html.ValidationMessage("ECN" + ecncount, "", new { @class = "text-danger", style = "font-size:12px" })*@
                                    </div>
                                    <div class="col-sm-1" name="lblFlagged" style="display:@if (Model.searchFlag == " none") { @Model.searchFlag} else {@Model.searchFlag }">  Flagged </div>
                                    <div class="col-sm-2" style="display:@if (Model.searchFlag == " none") { @Model.searchFlag} else {@Model.searchFlag }">
                                        <select name="Flagged" id="Flagged" onchange="javascript: ShoworHideFlaggedDate(this);" class="form-control">
                                            @foreach (var ci in (List<WF.ERMT.Application.Web.Models.DropDownItem>)ViewData["YesNo"])
                                            {
                                                <option value="@ci.Value" @if (ci.Value == Model.Flagged[ecncount]) { @Html.Raw("selected")          }>
                                                    @ci.Text
                                                </option>
                                            }
                                        </select>
                                        <span class="text-danger" id="ecnflagerror"></span>
                                        <br />
                                    </div>

                                    <div class="col-sm-3" style="display:@if (Model.searchFlag == "none") { @Model.searchFlag} else {@Model.searchFlag }">
                                        <input type="text" @if (!(Model.Flagged[ecncount] == "Y")) { @Html.Raw("style='display:none' ") } placeholder="Date Flagged" class="form-control input-normal input-sm" name="DateFlagged" value='@Model.DateFlagged[ecncount]' />

                                    </div>
                                    <div class="col-sm-6" style="text-align:right">
                                        @if (ecncount != 0)
                                        {
                                            <input type="button" title="Click to remove this ECN" class="btn btn-primary btn-xs removeButton" onclick="RemoveEcn(this);" data-id="removeicon" value="&ndash;" />
                                        }
                                        else
                                        {
                                            <input type="button" title="Click to remove this ECN" class="btn btn-primary btn-xs removeButton" onclick="RemoveEcn(this);" style="display:none" data-id="removeicon" value="&ndash;" />
                                        }
                                    </div>
                                </div>

                            </div>
                            }@*end of for*@
                            <div class="row">

                                @if ((Model.searchFlag == "none") && (!Model.success))
                                {
                                    <div class="col-sm-9">
                                    </div>
                                    <div class="col-sm-3" style="text-align:right">
                                        <input type="button" title="Click to Add Additional Ecn" class="btn btn-primary btn-xs" onclick="AddEcn(); return false;" value="+" id="btnaddecn" />
                                    </div>
                                }
                            </div>
                            <br />
                        </div>

                        <div class="row">
                            <div class="col-sm-3">WCIS#</div>
                            <div class="col-sm-3">
                                <input type="text" class="form-control input-normal input-sm" name="WCISNumber" value='@Model.WCISNumber' />
                            </div>
                        </div>

                        <div class="row formSectionHeaderRowDiv">
                            <div class="col-sm-12 formSectionHeaderTextDiv">
                                Primary PEP Detail
                                <img src="@Url.Content("/Contents/images/ExpandLess.png")" data-target="primarypepsection" data-swap="@Url.Content("/Contents/images/ExpandMore.png")" data-src="@Url.Content("/Contents/images/ExpandLess.png")" id="DisplayCustomerSection" style="float:right" alt="less" class="menu-down" />
                            </div>
                        </div>
                        <div id="primarypepsection">
                            @for (int ppcount = 0; ppcount < Model.PrimaryPepFirstName.Count; ppcount++)
                            {
                                if ((ppcount > 0) && (Model.PrimaryPepLastName[ppcount] == "") && (Model.PrimaryPepLastName2[ppcount] == "") && (Model.PrimaryPepFirstName[ppcount] == "") && (Model.PrimaryPepAKAName[ppcount] == "") && (Model.PrimaryPepMiddleName[ppcount] == "") && (Model.PrimaryPepPosition[ppcount] == "-1") && (Model.PrimaryPepAssociation[ppcount] == "") && (Model.PepAssociatedCountry[ppcount] == "-1") && (Model.PrimaryPepFirstName.Count > 1) && (Model.PrimaryPepCountry[ppcount] == "-1") /*&& (Model.PrimaryPepId[ppcount] == "-1")*/)
                                {
                                    ppcount++;
                                    continue;
                                }
                                <div class="row multiItemGroup" data-id="PrimaryPep" id=@string.Concat("PrimaryPep", (Model.PrimaryPepId[ppcount])) >
                                    <div class="row innerRow">
                                        <div class="col-sm-3"> Primary PEP Name<span class="asterik">&#42;</span></div>
                                        <div class="col-sm-3">
                                            Last Name<span class="asterik">&#42;</span>
                                            <input type="text" @*placeholder="Last Name&#42;"*@ class="form-control input-normal input-sm" id="LastName" name="PrimaryPepLastName" value='@Model.PrimaryPepLastName[ppcount]' />
                                            @Html.ValidationMessage("PrimaryPepLastName" + ppcount.ToString(), "", new { @class = "text-danger", style = "font-size:12px" })
                                        </div>
                                        <div class="col-sm-3">
                                            First Name<span class="asterik">&#42;</span>
                                            <input type="text" @*placeholder="First Name&#42;"*@ class="form-control input-normal input-sm" id="FirstName" name="PrimaryPepFirstName" value='@Model.PrimaryPepFirstName[ppcount]' />
                                            @Html.ValidationMessage("PrimaryPepFirstName" + ppcount.ToString(), "", new { @class = "text-danger", style = "font-size:12px" })
                                        </div>
                                        <div class="col-sm-3">
                                            AKA Name<span class="asterik">&#42;</span>
                                            <input type="text" @*placeholder="AKA Name&#42;"*@ class="form-control input-normal input-sm" id="AKAName" name="PrimaryPepAKAName" value='@Model.PrimaryPepAKAName[ppcount]' />
                                            @Html.ValidationMessage("PrimaryPepAKAName" + ppcount.ToString(), "", new { @class = "text-danger", style = "font-size:12px" })
                                        </div>
                                    </div>
                                    <div class="row innerRow">
                                        <div class="col-sm-3"></div>
                                        <div class="col-sm-3">
                                            Middle Name
                                            <input type="text" @*placeholder="Middle Name"*@ class="form-control input-normal input-sm" id="MiddleName" name="PrimaryPepMiddleName" value='@Model.PrimaryPepMiddleName[ppcount]' />
                                        </div>
                                        <div class="col-sm-3">
                                            Last Name2
                                            <input type="text" @*placeholder="Last Name2"*@ class="form-control input-normal input-sm" id="LastName2" name="PrimaryPepLastName2" value='@Model.PrimaryPepLastName2[ppcount]' />
                                        </div>
                                    </div>

                                    <div class="row innerRow">
                                        <div class="col-sm-3"> Primary PEP Country<span class="asterik">&#42;</span></div>
                                        <div class="col-sm-3">

                                            <select name="PrimaryPepCountry" id="PrimaryPepCountryId" onchange="javascript: PopulateCountryRiskDesignation(this);" class="form-control">
                                                @foreach (var pepcountry in (List<WF.ERMT.Application.Entities.CustomEntities.CountryEntity>)ViewData["Countries"])
                                                {
                                                    <option value="@pepcountry.CountryID" @if (pepcountry.CountryID == -1) { @Html.Raw("data-risk-designation='' ") } else { @Html.Raw(" data-risk-designation='" + @pepcountry.CountryRiskDesignation.RiskDesignation + "' ")  } @if (pepcountry.CountryID.ToString() == Model.PrimaryPepCountry[ppcount]) { @Html.Raw(" selected") }>
                                                        @pepcountry.Country
                                                    </option>
                                                }
                                            </select>
                                            @Html.ValidationMessage("PrimaryPepCountry" + ppcount.ToString(), "", new { @class = "text-danger", style = "font-size:12px" })

　
                                        </div>
                                        <div class="col-sm-3">Country Risk Designation</div>
                                        <div class="col-sm-3">

                                            <input type="text" class="form-control input-normal input-sm" id=" " name="PrimaryPepCountryRiskDesignationtxt"
                                                   disabled="disabled" value='@Model.PrimaryPepCountryRiskDesignation[ppcount]' />
                                            <input type="hidden" id="@string.Concat(" riskdesignation", @ppcount, "idtxt")" name="PrimaryPepCountryRiskDesignation" value='@Model.PrimaryPepCountryRiskDesignation[ppcount]' />

                                        </div>
                                    </div>

                                    <div class="row innerRow">
                                        <div class="col-sm-3" data-id="bsaapprovallabel" @if ((Model.PrimaryPepCountryRiskDesignation[ppcount] != "High")) { @Html.Raw("style='display:none' ")        }>BSA Approval Received</div>
                                        <div class="col-sm-2" data-id="bsaapproval" @if ((Model.PrimaryPepCountryRiskDesignation[ppcount] != "High")) { @Html.Raw("style='display:none' ")        }>
                                            <select id="CountryBSAApprovalId" name="PrimaryPepBSAApproval" onchange="javascript: ShoworHidePrimaryPepCountryDivsOnBSAApprovalSelection(this);" class="form-control">
                                                @foreach (var bsaapproval in (List<WF.ERMT.Application.Entities.CustomEntities.BSAApprovalEntity>)ViewData["BSAApprovals"])
                                                {
                                                    <option value="@bsaapproval.BSAApprovalId" @if (bsaapproval.BSAApprovalId.ToString() == Model.PrimaryPepBSAApproval[ppcount]) { @Html.Raw("selected")           }>
                                                        @bsaapproval.Status
                                                    </option>
                                                }
                                            </select>
                                        </div>
                                        <div class="col-sm-1" data-id="multiloblabel" @if ((Model.PrimaryPepBSAApproval[ppcount] != "1")) { @Html.Raw("style='display:none' ") }> LOB </div>
                                        <div class="col-sm-3" data-id="multilabel" @if ((Model.PrimaryPepBSAApproval[ppcount] != "1")) { @Html.Raw("style='display:none' ")          }>
                                            <select multiple name="CDDGPrimaryPepAssociatedCountryLobs" class="form-control" id="CDDGPrimaryPepCountryLobs">
                                                @foreach (var multilob in (List<WF.ERMT.Application.Entities.CustomEntities.LobEntity>)ViewData["LobMulti"])
                                                {
                                                    <option value="@multilob.LobId" @if (Model.PrimarypepCountryLOB != null) { if (Model.PrimarypepCountryLOB[ppcount].Contains(multilob.LobId.ToString())) { @Html.Raw("selected")       } }>
                                                        @multilob.LobName
                                                    </option>
                                                }
                                            </select>
                                            <input type="hidden" class="form-control input-normal input-sm" id="PrimaryPEPCountryId" value='@Model.PrimarypepCountryLOBCSV[ppcount]' name="PrimarypepCountryLOBCSV" />
                                        </div>
                                        <div class="col-sm-2" data-id="lobdate" @if ((Model.PrimaryPepBSAApproval[ppcount] != "1")) { @Html.Raw("style='display:none' ")        }>
                                            <input type="text" placeholder="Select date" class="form-control input-normal input-sm" value='@Model.PrimaryPepCountryLobDate[ppcount]' id="CountryLobDate" name="PrimaryPepCountryLobDate" />
                                        </div>
                                    </div>
                                    <div class="row innerRow">
                                        <div class="col-sm-3"> PEP Position<span class="asterik">&#42;</span></div>
                                        <div class="col-sm-3">
                                            <select name="PrimaryPepPosition"id="PrimaryPepPositionId" onchange="javascript: ShoworHideOpenField(this);" class="form-control">
                                                @foreach (var pripeppos in (List<WF.ERMT.Application.Entities.CustomEntities.PrimaryPepPositionEntity>)ViewData["PrimaryPepPositions"])
                                                {
                                                    <option value="@pripeppos.PrimaryPepPositionId" @if (pripeppos.PrimaryPepPositionId.ToString() == Model.PrimaryPepPosition[ppcount]) { @Html.Raw("selected")        }>
                                                        @pripeppos.PrimaryPepPositionName
                                                    </option>
                                                }
                                            </select>
                                            @Html.ValidationMessage("PrimaryPepPosition" + ppcount.ToString(), "", new { @class = "text-danger", style = "font-size:12px" })
                                            <br />
                                            <div data-id="positionopenfield" @if ((Model.PrimaryPepPosition[ppcount] != "36")) { @Html.Raw("style='display:none' ")   }>
                                                Other Position<span class="asterik">&#42;</span>
                                                <input type="text" @*placeholder="Other position*"*@ class="form-control input-normal input-sm" id="PrimaryPepPositionOpenField" name="PrimaryPepPositionOpenField" value='@Model.PrimaryPepPositionOpenField[ppcount]' />
                                                @Html.ValidationMessage("PrimaryPepPositionOpenField" + ppcount.ToString(), "", new { @class = "text-danger", style = "font-size:12px" })
                                            </div>
                                        </div>

                                        <div class="col-sm-3"> PEP Association<span class="asterik">&#42;</span></div>
                                        <div class="col-sm-3">
                                            <div class="dropdown">
                                                <button class="dropdown-toggle form-control" style="width:100%;text-align:left" type="button" data-toggle="dropdown">

                                                    <span class="dropDownDisplayText" id="PrimaryPepAssociationId" name="PrimaryPepAssociationSpan">@WF.ERMT.Application.Web.MasterDataUtilities.GetPEPAssociationOptionText(Model.PrimaryPepAssociation[ppcount])</span>
                                                    <span class="caretBig" style="float:right"></span>
                                                </button>
                                                <ul id="PrimaryPepAssociationId" class="dropdown-menu">
                                                    @foreach (var d in (List<WF.ERMT.Application.Entities.CustomEntities.PrimaryPepAssociationEntity>)ViewData["PrimaryPepAssociations"])
                                                    {
                                                        if (d.PrimaryPepAssociationOptions.Count == 1)
                                                        {
                                                            <li id="PrimaryPepAssociationId"><a data-id="@d.PrimaryPepAssociationOptions.First().AssociationOptionId" tabindex="-1" href="javascript: void(0)" onclick="AssociationOptionClick(this);">@d.Association</a></li>
                                                        }
                                                        else {
                                                            <li class="dropdown-submenu">
                                                                <a class="test" tabindex="-1" href="javascript: void(0)">@d.Association <span class="caret"></span></a>
                                                                <ul class="dropdown-menu">
                                                                    @foreach (var ch in d.PrimaryPepAssociationOptions)
                                {
                                                                        <li><a tabindex="-1" data-id="@ch.AssociationOptionId" href="javascript: void(0)" onclick="AssociationOptionClick(this);">@ch.AssociationOption</a></li>
                                                                    }
                                                                </ul>
                                                            </li>
                                                        }
                                                    }
                                                </ul>
                                            </div>
                                            <input type="hidden" id="PEPAssociationOptionId" name="PrimaryPepAssociation" value='@Model.PrimaryPepAssociation[ppcount]' />
                                            @Html.ValidationMessage("PrimaryPepAssociation" + ppcount.ToString(), "", new { @class = "text-danger", style = "font-size:12px" })
                                        </div>
                                    </div>

                                    <div class="row innerRow">
                                        <div class="col-sm-3"> PEP Associated Country<span class="asterik">&#42;</span></div>
                                        <div class="col-sm-3">

                                            <select name="PepAssociatedCountry" id="PrimaryPepAssociatedCountryId" onchange="javascript: PopulateAssociatedCountryRiskDesignation(this);" class="form-control">
                                                @foreach (var pepcountry in (List<WF.ERMT.Application.Entities.CustomEntities.CountryEntity>)ViewData["Countries"])
                                                {
                                                    <option value="@pepcountry.CountryID" @if (pepcountry.CountryID == -1) { @Html.Raw("data-associatedcountryrisk-designation='' ")  } else { @Html.Raw(" data-associatedcountryrisk-designation='" + @pepcountry.CountryRiskDesignation.RiskDesignation + "' ")   } @if (pepcountry.CountryID.ToString() == Model.PepAssociatedCountry[ppcount]) { @Html.Raw(" selected")  }>
                                                        @pepcountry.Country
                                                    </option>
                                                }
                                            </select>
                                            @Html.ValidationMessage("PepAssociatedCountry" + ppcount.ToString(), "", new { @class = "text-danger", style = "font-size:12px" })

                                        </div>

                                        <div class="col-sm-3">Country Risk Designation</div>
                                        <div class="col-sm-3">

                                            <input type="text" class="form-control input-normal input-sm" id="" name="PrimaryPepAssociatedCountryRiskDesignationtxt"
                                                   disabled="disabled" value='@Model.PrimaryPepAssociatedCountryRiskDesignation[ppcount]' />
                                            <input type="hidden" id="@string.Concat(" associatedcountryriskdesignation", @ppcount, "idtxt")" name="PrimaryPepAssociatedCountryRiskDesignation" value='@Model.PrimaryPepAssociatedCountryRiskDesignation[ppcount]' />

                                        </div>
                                    </div>

                                    <div class="row innerRow">
                                        <div class="col-sm-3" data-id="associatedcountrybsaapprovallabel" @if ((Model.PrimaryPepAssociatedCountryRiskDesignation[ppcount] != "High")) { @Html.Raw("style='display:none' ")         }>BSA Approval Received</div>
                                        <div class="col-sm-2" data-id="associatedcountrybsaapproval" @if ((Model.PrimaryPepAssociatedCountryRiskDesignation[ppcount] != "High")) { @Html.Raw("style='display:none' ")         }>
                                            <select id="AssociatedCountryBSAApprovalId" name="AssociatedCountryBSAApprovalId" onchange="javascript: ShoworHidePrimaryPepAssociatedCountryDivsOnBSAApprovalSelection(this);" class="form-control">
                                                @foreach (var bsaapproval in (List<WF.ERMT.Application.Entities.CustomEntities.BSAApprovalEntity>)ViewData["BSAApprovals"])
                                                {
                                                    <option value="@bsaapproval.BSAApprovalId" @if (bsaapproval.BSAApprovalId.ToString() == Model.PrimaryPepAssociatedCountryBSAApproval[ppcount]) { @Html.Raw("selected")            }>
                                                        @bsaapproval.Status
                                                    </option>
                                                }
                                            </select>
                                        </div>
                                        <div class="col-sm-1" data-id="associatedcountrymultiloblabel" @if ((Model.PrimaryPepAssociatedCountryBSAApproval[ppcount] != "1")) { @Html.Raw("style='display:none' ")  }> LOB </div>
                                        <div class="col-sm-3" data-id="associatedcountrymultiloblabel" @if ((Model.PrimaryPepAssociatedCountryBSAApproval[ppcount] != "1")) { @Html.Raw("style='display:none' ")           }>
                                            <select multiple name="CDDGPrimaryPepCountryLobs" class="form-control" id="CDDGPrimaryPepAssociatedCountryLobs">
                                                @foreach (var multilob in (List<WF.ERMT.Application.Entities.CustomEntities.LobEntity>)ViewData["LobMulti"])
                                                {
                                                    <option value="@multilob.LobId" @if (Model.PrimarypepAssociatedCountryLOB != null) { if (Model.PrimarypepAssociatedCountryLOB[ppcount].Contains(multilob.LobId.ToString())) { @Html.Raw("selected")        } }>
                                                        @multilob.LobName
                                                    </option>
                                                }
                                            </select>
                                            <input type="hidden" class="form-control input-normal input-sm" id="PrimaryPEPAssociatedCountryId" value='@Model.PrimarypepAssociatedCountryLOBCSV[ppcount]' name="PrimarypepAssociatedCountryLOBCSV" />
                                        </div>
                                    </div>

                                    <div class="col-sm-9"></div>
                                    <div class="col-sm-3" style="text-align:right">
                                        @if (ppcount != 0)
                                {
                                            <input type="button" title="Click to remove this Primary PEP" class="btn btn-primary btn-xs removeButton" onclick="RemovePrimaryPep(this); return false;" data-id="removeicon" value="&ndash;" />
                                        }
                                        else
                                        {
                                            <input type="button" title="Click to remove this Primary PEP" style="display:none" class="btn btn-primary btn-xs removeButton" onclick="RemovePrimaryPep(this); return false;" data-id="removeicon" value="&ndash;" />

                                        }
                                    </div>
                                </div>

　
　
　
                            }
                            @if ((Model.searchFlag == "none") && (!Model.success))
                            {
                                <div class="row">
                                    <div class="col-sm-6">
                                    </div>
                                    <div class="col-sm-3">
                                    </div>
                                    <div class="col-sm-3" style="text-align:right">
                                        <input type="button" title="Click to Add Additional Primary PEP" class="btn btn-primary btn-xs" onclick="AddPrimaryPep(); return false;" value="+" id="btnaddprimarypep" />
                                    </div>
                                </div>
                            }
                            <br />
                            <br />
                        </div>

　
　
                        <div class="row formSectionHeaderRowDiv">
                            <div class="col-sm-12 formSectionHeaderTextDiv">
                                Requestor Detail
                                <img src="@Url.Content("/Contents/images/ExpandLess.png")" data-target="requestorsection" data-swap="@Url.Content("/Contents/images/ExpandMore.png")" data-src="@Url.Content("/Contents/images/ExpandLess.png")" id="DisplayCustomerSection" style="float:right" alt="less" class="menu-down" />
                            </div>
                        </div>
                        <div id="requestorsection">
                            <div class="row">
                                <div class="col-sm-3"> Requestor AU#</div>
                                <div class="col-sm-3">
                                    <input type="text" disabled="disabled" class="form-control input-normal input-sm" id="requestorauid" name="RequestorAU" value='@Model.RequestorAU' />
                                    <input type="hidden" id="requestorautxtid" name="RequestorAU" value='@Model.RequestorAU' />
                                </div>
                                <div class="col-sm-3"> Requestor Email</div>

                                <div class="col-sm-3">
                                    <input type="text" disabled="disabled" class="form-control input-normal input-sm" id="requestoremailid" name="RequestorEmail" value='@Model.RequestorEmail' />
                                    <input type="hidden" id="requestoremailtxtid" name="RequestorEmail" value='@Model.RequestorEmail' />
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-3"> Requestor Last Name</div>
                                <div class="col-sm-3">
                                    <input type="text" disabled="disabled" class="form-control input-normal input-sm" id="requestorlnid" name="RequestorLastName" value='@Model.RequestorLastName' />
                                    <input type="hidden" id="requestorlntxtid" name="RequestorLastName" value='@Model.RequestorLastName' />
                                </div>
                                <div class="col-sm-3"> Requestor First Name</div>
                                <div class="col-sm-3">
                                    <input type="text" disabled="disabled" class="form-control input-normal input-sm" id="requestorfnid" name="RequestorFirstName" value='@Model.RequestorFirstName' />
                                    <input type="hidden" id="requestorfntxtid" name="RequestorFirstName" value='@Model.RequestorFirstName' />
                                </div>
                            </div>

                            @{int counter = 0; }
                            @foreach (var addlob in Model.LOB)
                                {
                                    if (addlob == "-1" && Model.LOB.Count > 1 && counter > 0)
                                    {
                                        counter++;
                                        continue;
                                    }
                                <div class="row" data-id="lobrow">
                                    <div class="col-sm-3" data-id="loblabel">
                                        Line of Business @if (counter == 0)
                                {@Html.Raw("<span class='asterik'>*</span>")}
                                    </div>
                                    <div class="col-sm-3">

                                        <select name="LOB" id="LOB1" onchange="javascript: PopulateMajorLOB(this);" class="form-control">
                                            @foreach (var lob in (List<WF.ERMT.Application.Entities.CustomEntities.LobEntity>)ViewData["Lobs"])
                                            {
                                                <option value="@lob.LobId" @if (lob.LobId == -1) { @Html.Raw("data-major-lob='' ")                } else { @Html.Raw(" data-major-lob='" + @lob.MajorLob.MajorLOBName + "' ")                } @if (lob.LobId.ToString() == addlob) { @Html.Raw(" selected")        }>
                                                    @lob.LobName
                                                </option>
                                            }
                                        </select>

　
                                        @Html.ValidationMessage("LOB", "", new { @class = "text-danger", style = "font-size:12px" })
                                    </div>
                                    <div class="col-sm-3">Major LOB</div>
                                    <div class="col-sm-3" style="text-align:right">
                                        <input type="text" class="form-control input-normal input-sm" id="@string.Concat(" majorlob", @counter, "id")" name="MajorLOBtxt"
                                               disabled="disabled" value='@Model.MajorLOB[counter]' />
                                        <br />
                                        @if (counter != 0)
                                {
                                            <input type="button" title="Click to remove this LOB" class="btn btn-primary btn-xs removeButton" onclick="RemoveLob(this);" data-id="removeicon" value="&ndash;" />
                                        }
                                        else
                                        {
                                            <input type="button" title="Click to remove this LOB" class="btn btn-primary btn-xs removeButton" onclick="RemoveLob(this);" style="display:none" data-id="removeicon" value="&ndash;" />
                                        }
                                        <input type="hidden" id="@string.Concat(" majorlob", @counter, "idtxt")" name="MajorLOB" value='@Model.MajorLOB[counter]' />
                                    </div>
                                </div>
                                counter++;
                            }
                            @if ((Model.searchFlag == "none") && (!Model.success))
                            {
                                <div class="row">
                                    <div class="col-sm-6">
                                    </div>
                                    <div class="col-sm-3">
                                    </div>
                                    <div class="col-sm-3" style="text-align:right">
                                        <input type="button" title="Click to Add Additional LOB" class="btn btn-primary btn-xs" onclick="AddLOB(); return false;" value="+" id="btnaddlob" />
                                    </div>
                                </div>
                            }
                            <div class="row">
                                @*<div class="col-sm-3">Wells Fargo Branch<span class="asterik">&#42;</span></div>
                                <div class="col-sm-3">
                                    <select name="WFBranchId" class="form-control">
                                        @foreach (var branch in (List<WF.ERMT.Application.Entities.CustomEntities.WellsFargoBranchEntity>)ViewData["WFBranches"])
                                        {
                                            <option value="@branch.BranchID" @if (branch.BranchID.ToString() == Model.WFBranchId.ToString()) { @Html.Raw("selected")        }>
                                                @branch.BranchName
                                            </option>

                                        }
                                    </select>
                                    @Html.ValidationMessage("WFBranchId", "", new { @class = "text-danger", style = "font-size:12px" })
                                </div>*@

                                <div class="col-sm-3">Booking Office<span class="asterik">&#42;</span></div>
                                <div class="col-sm-3">
                                    <select name="BookingOfficeId" class="form-control">
                                        @foreach (var office in (List<WF.ERMT.Application.Entities.CustomEntities.BookingOfficeEntity>)ViewData["BookingOffices"])
                                        {
                                            <option value="@office.OfficeID" @if (office.OfficeID.ToString() == Model.BookingOfficeId.ToString()) { @Html.Raw("selected")        }>
                                                @office.Name
                                            </option>

                                        }
                                    </select>
                                    @Html.ValidationMessage("BookingOfficeId", "", new { @class = "text-danger", style = "font-size:12px" })
                                </div>
                                <div class="col-sm-3">Requestor Comments</div>
                                <div class="col-sm-3">
                                    <textarea class="form-control" rows="5" id="RequesterDeterminationCommentsid" name="RequestorComments" value='@Model.RequestorComments'>@Model.RequestorComments</textarea>
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-3">Attachment</div>
                            <div class="col-sm-3" id="Attachment">
                                @*todo: check it*@
                               @if ((Model.PepRequestStatus == "Rejected") && (HttpContext.Current.Session["SelectedRole"].ToString() == "LOB - Line of Business(PEP)"))
                               {
                                   for (int i = 0; i < Model.AttachhmentList.Count; i++)
                                   {
                                    <div id='@Model.AttachhmentList[i].FileName.Split('.')[0].Trim().Replace(" ","")'>
                                        <a class="attachment" href="/Download/PEPAttachment/@Model.AttachhmentList[i].AttachmentID">@Model.AttachhmentList[i].FileName</a><br />
                                    </div>
                                   }

                               }
                               else
                               {
                                   for (int i = 0; i < Model.AttachhmentList.Count; i++)
                                   {
                                    <div id='@Model.AttachhmentList[i].FileName.Split('.')[0].Trim().Replace(" ","")'>
                                        <a class="attachment" href="/Download/PEPAttachment/@Model.AttachhmentList[i].AttachmentID">@Model.AttachhmentList[i].FileName</a><br />
                                    </div>
                                   }
                               }
                                @if (Model.AttachhmentList.Count < 5)
                                {
                                <input type="file" class="multiple" name="Uploadfiles" multiple />
                                @*@Html.ValidationMessage("Attachment", "", new { @class = "text-danger", style = "font-size:12px" })*@
                                }
                                    </div>
                            <div class="col-sm-3">  Initial Request Date</div>
                            <div class="col-sm-3">
                                <input type="text" disabled="disabled" class="form-control input-normal input-sm" style="" id="initialrequestdateid" name="InitialRequestDate" value='@Model.InitialRequestDate' />
                                <input type="hidden" id="initialrequestdatetxtid" name="InitialRequestDate" value='@Model.InitialRequestDate' />
                            </div>
                        </div>

                      

                        @if (Model.PepRequestStatusId == 6 || Model.PepRequestStatusId == 3)
                        {
                            <div class="row">
                                <div class="col-sm-3">  Request Cancellation Comments</div>
                                <div class="col-sm-3">
                                    <textarea class="form-control" rows="5" id="pepcancellationcomments" name="PepCancellationComments" value='@Model.PepCancellationComments'>@Model.PepCancellationComments</textarea>
                                </div>
                            </div>
                        }

　
                    </div>
                </div>
            </div>
            <div style="visibility:hidden">
                <input type="hidden" value='@Model.searchFlag' id="searchflagdetails" />
                <input type="hidden" value='@Model.success' id="successflagdetails" />
                <br />
            </div>

            <div class="container">
                <div class="row">
                    <div class="col-lg-12">
                       

　
　
                        <div id="dialog">
                            <div>
                                @Html.DropDownList("PepCancellationComments", new List<SelectListItem>
                            { new SelectListItem() {Text = "LOB no longer interested in Customer", Value="LOB no longer interested in Customer"},
                              new SelectListItem() {Text = "Customer no longer interested", Value="Customer no longer interested"},
                              new SelectListItem() {Text = "Other", Value="Other"}
                            }, new { @class = "form-control", name = "PepCancellationComments", id = "pepcancellationcomments" })
                                @*<textarea class="form-control" rows="5" id="pepcancellationcomments" name="PepCancellationComments" value='@Model.PepCancellationComments'></textarea>*@
                            </div>
                        </div>

                    </div>
                </div>
            </div>

        </div>
        <br />
        <div class="clearfix">
        </div>
        <div id="officeUse" class="panel panel-default" style="display:@if (Model.searchFlag == " none")
                     { @Model.searchFlag}
                     else
                     {@Model.searchFlag }">

            @*<div id="officeUse" class="panel panel-default">*@
            <div class="panel-heading">
                <h4 class="panel-title" style="font-size:1.3em">
                    PEP Determination <img src="@Url.Content("/Contents/images/ExpandMore.png")" data-swap="@Url.Content("/Contents/images/ExpandLess.png")" data-src="@Url.Content("/Contents/images/ExpandMore.png")" id="Displaypepoffice" style="float:right" alt="less" class="menu-down" />@*<span class="glyphicon glyphicon-menu-down" id="Displaypepoffice" style="float:right;"></span>*@
                </h4>
            </div>
            @*<div>*@
            <div class="panel-body" style="font-family:Verdana" id="panelbodyoffice">
                <div class="container" id="officeUseTable">
                    <div class="row">
                        <div class="col-sm-3">  PEP </div>
                        <div class="col-sm-3">
                            <select name="Pep" id="Pep" onchange="javascript: ShoworHideDivs(this);" class="form-control">
                                @foreach (var ci in (List<WF.ERMT.Application.Web.Models.DropDownItem>)ViewData["YesNo"])
                                {
                                    <option value="@ci.Value" @if (ci.Value == Model.Pep) { @Html.Raw("selected")      }>
                                        @ci.Text
                                    </option>
                                }
                            </select>
                            <span class="text-danger" id="ispepflagerror" style="display:none">Select some value</span>
                            <input type="hidden" class="form-control input-normal input-sm" id="Peptxtbox" name="Pep" value='@Model.Pep' />
                            @*@Html.ValidationMessage("Pep", "", new { @class = "text-danger", style = "font-size:12px" })*@
                        </div>
                    </div>
                    <div class="row" id="isPEP1" @if (!(Model.Pep == "Y")) { @Html.Raw("style='display:none' ")            }>
                        <div class="col-sm-3">          PEP Type<span class="asterik">&#42;</span></div>
                        <div class="col-sm-3">
                            <select name="PepTypeId" class="form-control">
                                @foreach (var ptype in (List<WF.ERMT.Application.Entities.CustomEntities.PepTypeEntity>)ViewData["PepTypes"])
                                {
                                    <option value="@ptype.PepTypeId" @if (ptype.PepTypeId.ToString() == Model.PepTypeId.ToString()) { @Html.Raw("selected")         }>
                                        @ptype.PepType
                                    </option>
                                }
                            </select>
                            <span class="text-danger" id="peptypeflagerror" style="display:none">Select Pep Type</span>
                        </div>
                        <div class="col-sm-3">         PEP Level<span class="asterik">&#42;</span></div>
                        <div class="col-sm-3">
                            <select name="PepLevelId" class="form-control">
                                @foreach (var plevel in (List<WF.ERMT.Application.Entities.CustomEntities.PepLevelEntity>)ViewData["PepLevels"])
                                {
                                    <option value="@plevel.PEPLevelID" @if (plevel.PEPLevelID.ToString() == Model.PepLevelId.ToString()) { @Html.Raw("selected")      }>
                                        @plevel.PEPLevel
                                    </option>
                                }
                            </select>
                            <span class="text-danger" id="peplevelflagerror" style="display:none">Select Pep Level</span>
                        </div>
                    </div>
                    <div class="row" id="isPEP2" @if (!(Model.Pep == "Y")) { @Html.Raw("style='display:none' ")            }>

                        <div class="col-sm-3" name="lblHoganFlagged">  PEP Flag Set in Hogan?<span class="asterik">&#42;</span> </div>
                        <div class="col-sm-3" name="HoganFlaggedDiv">
                            <select name="HoganFlagged" id="HoganFlagged" onchange="javascript: ShoworHideHoganFlaggedDate(this);" class="form-control">
                                @foreach (var ci in (List<WF.ERMT.Application.Web.Models.DropDownItem>)ViewData["YesNo"])
                                {
                                    <option value="@ci.Value" @if (ci.Value == Model.HoganFlagged) { @Html.Raw("selected")           }>
                                        @ci.Text
                                    </option>
                                }
                            </select>
                            @Html.ValidationMessage("HoganFlagged", "", new { @class = "text-danger", style = "font-size:12px" })
                            @*<span class="text-danger" id="ecnflagerror"></span>*@
                            @*<br />*@
                        </div>

                        <div class="col-sm-3" @if (!(Model.HoganFlagged == "Y")) { @Html.Raw("style='display:none' ")  } id="labelHoganFlagDate">         Hogan Flag date<span class="asterik">&#42;</span></div>
                        <div class="col-sm-3">
                            @if (Model.HoganFlagDate.HasValue)
                            {
                                <input type="text" class="form-control input-normal input-sm" id="flagdateid" name="HoganFlagDate" @if (!(Model.HoganFlagged == "Y")) { @Html.Raw("style='display:none' ")  } value='@Model.HoganFlagDate.Value.ToShortDateString()' />
                            }
                            else
                            {
                                <input type="text" class="form-control input-normal input-sm" id="flagdateid" name="HoganFlagDate" @if (!(Model.HoganFlagged == "Y")) { @Html.Raw("style='display:none' ")  } value='@Model.HoganFlagDate' />
                            }
                            @*<span class="text-danger" id="hoganflagdateflagerror" style="display:none">Select Flag date</span>*@
                            @Html.ValidationMessage("HoganFlagDate", "", new { @class = "text-danger", style = "font-size:12px" })
                        </div>

　
　
　
                    </div>

                    <div class="row" id="notaPEP" @if (!(Model.Pep == "N")) { @Html.Raw("style='display:none' ")            }>
                        <div class="col-sm-3">      Reason not a PEP</div>
                        <div class="col-sm-3">

                            <select name="ReasonNotPepId" class="form-control">
                                @foreach (var reasons in (List<WF.ERMT.Application.Entities.CustomEntities.ReasonNotPepEntity>)ViewData["ReasonsNotPep"])
                                {
                                    <option value="@reasons.ReasonID" @if (reasons.ReasonID.ToString() == Model.ReasonNotPepId.ToString()) { @Html.Raw("selected")      }>
                                        @reasons.Reason
                                    </option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-3">PEP Determination Comments<span class="asterik">&#42;</span></div>
                        <div class="col-sm-3">
                            <textarea class="form-control" rows="5" id="additionalcommentsid" name="PepDeterminationComments" value='@Model.PepDeterminationComments'>@Model.PepDeterminationComments</textarea>
                            <span class="text-danger" id="determinationcommentsflagerror" style="display:none">Enter comments</span>
                            @Html.ValidationMessage("PepDeterminationComments", "", new { @class = "text-danger", style = "font-size:12px" })
                        </div>
                        <div class="col-sm-3">DateTime Stamp</div>
                        <div class="col-sm-3">
                            <input type="text" disabled="disabled" class="form-control input-normal input-sm" style="" id="DeterminationUpdationDateid" name="DeterminationUpdationDate" value='@Model.DeterminationUpdationDate' />
                            <input type="hidden" id="DeterminationUpdationDateid" name="DeterminationUpdationDate" value='@Model.DeterminationUpdationDate' />
                        </div>
                    </div>
                    
                </div>
            </div>
           
               
           
            <input type="hidden" value='@Model.changedpropertiesforCR' id="crprops" />
        </div> 
        <div class="row">
        <div class="col-lg-12">
            
                    @if (!Model.success && Model.PepRequestStatus != "Canceled" && (HttpContext.Current.Session["SelectedRole"].ToString() != "LOB - Line of Business(PEP)"))
                    {
                            <div class="col-lg-10" style="text-align:right">
                                <input type="submit" style="font-family:Verdana" formaction="AcceptPEPDeterminationFormCR" formmethod="post" class="btn btn-primary" name="BtnSubmit" value="Accept" id="btncompleterequest" />
                                @*<button type="button" class="btn" id="btncompleterequest" style="font-family:Verdana">Submit</button>*@
                            </div>
                        
                            <div class="col-lg-1">
                            <input type="submit" style="font-family:Verdana" formaction="RejectPEPDeterminationFormCR" formmethod="post" name="BtnSubmit" class="btn btn-primary" value="Deny" id="btnrejectrequest" />
                            @*<button type="button" class="btn btn-primary" id="btnrejectrequest" style="font-family:Verdana">Reject</button>*@
                            </div>
                    }
                        <div class="col-lg-1" style="text-align:right" id="btnbackdiv">
                            <input type="button" style="font-family:Verdana" class="btn btn-primary" name="Back" value="Back" id="btnback" />
                            <input type="hidden" style="padding-right:10px;padding-left:10px;" id="currentrole" value="@HttpContext.Current.Session["SelectedRole"].ToString()" />
                            @*<button type="button" class="btn" id="btncompleterequest" style="font-family:Verdana">Submit</button>*@
                        </div>
           
        </div>
            </div>
       
        

      
        <br />
</div>
    
    

　
　
　
<script type="text/javascript">

    $(document).ready(function () {
        
        var model= JSON.parse('@Html.Raw(Model.changedprops)');
        if (model != null) {
            $.each(model, function (i, item) {
                if (item.length > 0) {
                    for (var j = 0; j < item.length; j++) {
                        if (i == "Ecns") {
                            $('input[value=' + item[j] + ']').css('background', 'yellow');
                        }
                        else if (i == "Customer") {
                            $('#customersection').find('#' + item[j]).css('background', 'yellow');
                        }
                        else if (i == "LobPeps") {
                            $('#lobrow').find('option[value=' + item[j] + ']').css('background', 'yellow');
                        }
                        else if (i == "Attachments") {
                            var attach = item[j].split('.');
                            $('#Attachment').find('#' + attach[0].replace(/ /g, '')).css('background', 'yellow');
                        }
                        else if (i == "PrimaryPeps") {
                            var ppes = item[j].split('|');
                            var divpanel = $(ppes[0]);
                            for (var i = 1; i <= ppes.length; i++) {
                                if (ppes[i] != "") {
                                    $('#PrimaryPep' + ppes[0]).find('#' + ppes[i]).css('background', 'yellow');
                                }
                            }
                        }
                        else {
                            $('[name=' + i + ']').css('background', 'yellow');
                        }

　
                    }

　
                }

　
            });
        }
        $('#crno').css('background', '#eee');
        $('#officeUse').find('input,textarea, select').css('background', '#eee');
        $('#additionalcommentsid').css('background', 'white');
        var pepidval = $('#pepid').val();
        var comments = $('textarea#pepcancellationcomments').val();
        $('#btnbackdiv').show();
        @*//var model = @Html.Raw(Json.Encode(Model));*@

　
        $("#dialog").dialog({
            autoOpen: false, modal: true,
            width: '400px',
            'title': 'Please provide Cancellation comments',
            show: "blind", hide: "blind",
            'buttons': [{
                text: 'Submit',
                // open: function() { $(this).addClass('b') }, //will append a class called 'b' to the created 'OK' button.
                click: function () {

                    //var url @*= '@Url.Action("CancelPepRequest", "PEPDetails")'*@
                    // window.location.href = ''
                    //$.post('/PEPDetails/CancelPepRequest', values);
                    //var model = new {
                    //    pepid:pepidval,
                    //    pepcancellationcomments:$('#pepcancellationcomments').val()
                    //}

　
                    var url = window.rootUrl + "PEPDetails/CancelPepRequest?pepid=" + pepidval + "&cancelcomments=" + $('#pepcancellationcomments').val();
                    //var url = window.rootUrl + "PEPDetails/CancelPepRequest?model=" + model;
                    window.location.href = url;
                    $("#dialog").dialog("close");
                }
            },
            {
                text: "Cancel",
                click: function () { $("#dialog").dialog("close"); }
            }
            ]
        });

        //if ($('#countryriskdesignation option:selected').text() == "") {
        //    $('#countryriskdesignation').hide();
        //}
        //if ($('#bsaapproval option:selected').text() == "") {
        //    $('#bsaapproval').hide()
        //}
        //if ($('#PrimarypepCountryLOB option:selected').text() == "") {
        //    $('#lob').hide();
        //}
        //if ($('#primarypepcountrylobdate').val() == "") {
        //    $('#primarypepcountrylobdatediv').hide();
        //}
        //if ($('#countryriskdesignation option:selected').val() == "") {
        //    $('#countryriskdesignation').hide();
        //}
        //if ($('#bsaapproval option:selected').val() == "") {
        //    $('#bsaapproval').hide()
        //}
        //if ($('#PrimarypepCountryLOB option:selected').text() == "") {
        //    $('#lob').hide();
        //}
        //if ($('#primarypepcountrylobdate').val() == "") {
        //    $('#primarypepcountrylobdatediv').hide();
        //}
        $("#formDetails").submit(function () {

            $("select[name='PrimarypepCountryLOB']").each(function () {

                var csv = $(this).find(':selected').map(function () { return $(this).val(); }).get().join(',');
                $(this).parent().closest("div[data-id='PrimaryPep']").find("input[name='PrimarypepCountryLOBCSV']").val(csv);
            })

            $("select[name='PrimarypepAssociatedCountryLOB']").each(function () {

                var csv = $(this).find(':selected').map(function () { return $(this).val(); }).get().join(',');
                $(this).parent().closest("div[data-id='PrimaryPep']").find("input[name='PrimarypepAssociatedCountryLOBCSV']").val(csv);
            })

        });

　
        $('button.dropdown-toggle').on("click", function (e) {
            $('.dropdown-submenu a.test').next('ul').hide();
        });
        $('.dropdown-submenu a.test').on("click", function (e) {
            $('.dropdown-submenu a.test').next('ul').hide();

            $(this).next('ul').toggle();
            e.stopPropagation();
            e.preventDefault();
        });

　
        $('#FinalResoponseDateid').datepicker();
        $('#flagdateid').datepicker();
        $('#dateapprovalreceivedid').datepicker();
        $('#DateofBirthId').datepicker();
        $('input[name="DateFlagged"]').datepicker();
        $('input[name="PrimaryPepCountryLobDate"]').datepicker();
        $('input[name="PrimaryPepAssociatedCountryLobDate"]').datepicker();

        $('#btn1cancelrequest').on("click", function (e) {
            e.preventDefault();
            $("#dialog").dialog("open");
            return false;
        });

　
　
        var d = " ";
        $("#row3link").on("click", function (ev) {
            ev.preventDefault();

            if (d == " ") {
                $("#row3").show();
                d = "set";
            }
            else {
                $("#row4").show();
            }

　
        });
        $("#row3linkminus").on("click", function (ev) {
            ev.preventDefault();
            if (d == "set") {
                $("#row4").hide();
                d = " ";
            }
            else {
                $("#row3").hide();
            }

　
        });

        $("#AddnewPEP").on("click", function (ev) {
            ev.preventDefault();
            window.location.href = window.rootUrl + "PEPDetails/PEPDeterminationForm";

        });

        $("#Cancel").on("click", function (ev) {
            ev.preventDefault();
            window.location.href = window.rootUrl + "PEPDetails/LOBDasboardPage";

        });

　
        var searchdetails = $("#searchflagdetails").val();
        var successflagdetails = $("#successflagdetails").val();
        var requeststatus = $("#requeststatusid").val();
        console.log("searchdetails: "+ searchdetails);
        console.log("successflagdetails: " + successflagdetails);
        console.log("requeststatus:" + requeststatus);
        if (searchdetails == "none") {
            if (successflagdetails) {

                $('#formDetailsTable').find('input, textarea, select').attr('disabled', 'disabled');
                $("#saveForm").hide();
                $("#btncrcompleterequest").hide();
                $('#pepdetailssection').find('input.deleteIcon').hide();
                $("#AddnewPEP").show();
                $("#mandatoryfieldslabel").hide();

                $('select[name="PrimarypepCountryLOB"]').each(function () { MakeMultiSelectReadOnly(this) });
                $('select[name="PrimarypepAssociatedCountryLOB"]').each(function () { MakeMultiSelectReadOnly(this) });
                $('select[name="EntityFormationCountryLOB"]').each(function () { MakeMultiSelectReadOnly(this) });
                $('select[name="CountryofcitizenshipLOB"]').each(function () { MakeMultiSelectReadOnly(this) });

　
                $('button.dropdown-toggle').attr('disabled', 'disabled');
                $('#pepdetailssection').find('input.removeButton').hide();
            }

        }
        else {
            //if (requeststatus != "Completed" && requeststatus != "Pending" && requeststatus != "CR" && $('#selectedRole').val() != "LOB - Line of Business(PEP)") {
            if ((requeststatus == "Pending") && ($('#selectedRole').val() != "LOB - Line of Business(PEP)"))
            {
                console.log("!none & Pending & !LOB");
                $("#Displaypep").show()
                $("#searchForm").show();
                $("#row3link").hide();
                $("#row3linkminus").hide();
                $("#row3").show();
                $("#row4").show();
                $('#pepdetailssection').find('input, textarea, select').attr('disabled', 'disabled');

                $('select[name="PrimarypepCountryLOB"]').each(function () { MakeMultiSelectReadOnly(this) });
                $('select[name="PrimarypepAssociatedCountryLOB"]').each(function () { MakeMultiSelectReadOnly(this) });
                $('select[name="EntityFormationCountryLOB"]').each(function () { MakeMultiSelectReadOnly(this) });
                $('select[name="CountryofcitizenshipLOB"]').each(function () { MakeMultiSelectReadOnly(this) });

                $("#pepid").attr('disabled', false);
                $('button.dropdown-toggle').attr('disabled', 'disabled');
                $("#ispepid").attr('disabled', false);
                $('select[name="Flagged"]').attr('disabled', false);
                $('input[name="DateFlagged"]').attr('disabled', false);
                $('#pepdetailssection').find('input,textarea, select').css('outline', 'none');
                $('#pepdetailssection').find('input,textarea, select').css("text-align", 'left');
                $('#pepdetailssection').find('button.dropdown-toggle').attr('disabled', 'disabled');
                $('#pepdetailssection').find('input').show();
                $('#pepdetailssection').find('input.deleteIcon').hide();
                $("#saveForm").hide();
                $("#btncrcompleterequest").hide();
                $("#searchForm").hide();
                $("#Cancel").hide();
                $("#mandatoryfieldslabel").hide();
                $('#pepdetailssection').find('input.removeButton').hide();

            }
            else if ((requeststatus != "Pending")&&($('#selectedRole').val() != "LOB - Line of Business(PEP)"))
            {
                $('#officeUseTable').find('input, textarea, select').attr('disabled', 'disabled');
                $('#pepdetailssection').find('input, textarea, select').attr('disabled', 'disabled');

                $('select[name="PrimarypepCountryLOB"]').each(function () { MakeMultiSelectReadOnly(this) });
                $('select[name="PrimarypepAssociatedCountryLOB"]').each(function () { MakeMultiSelectReadOnly(this) });
                $('select[name="EntityFormationCountryLOB"]').each(function () { MakeMultiSelectReadOnly(this) });
                $('select[name="CountryofcitizenshipLOB"]').each(function () { MakeMultiSelectReadOnly(this) });

                $('button.dropdown-toggle').attr('disabled', 'disabled');
                var dateflaggeddetails = $('input[name="DateFlagged"]');
                var flaggeddetails = $('select[name="Flagged"]');

　
                flaggeddetails.each(function () {

                    if ($(this).prop('value') == "") {
                        $(this).css('display', 'none');
                        $(this).parent().closest('div.row').find('div[name="lblFlagged"]').css('display', 'none');
                    }

                });

　
                dateflaggeddetails.each(function () {

                    if ($(this).val() == "") {
                        $(this).css('display', 'none');
                    }
                });
                $('#pepdetailssection').find('input.removeButton').hide();
                $("#Cancel").hide();
            }
            else if (((requeststatus == "Completed") || (requeststatus == "Pending") || (requeststatus == "CR") || (requeststatus == "Rejected")) && ($('#selectedRole').val() == "LOB - Line of Business(PEP)"))
            {

                flaggeddetails.each(function () {

                    if ($(this).prop('value') == "") {
                        $(this).css('display', 'none');
                        $(this).parent().closest('div.row').find('div[name="lblFlagged"]').css('display', 'none');
                    }

                });

　
                dateflaggeddetails.each(function () {

                    if ($(this).val() == "") {
                        $(this).css('display', 'none');
                    }
                });
                $('#pepdetailssection').find('input.removeButton').hide();
                $('input[name="BtnSubmit"]').hide();
                $("#btncrcompleterequest").show();
                //$("#Cancel").hide();
            }

            else if (((requeststatus == "Canceled")) && ($('#selectedRole').val() == "LOB - Line of Business(PEP)"))
            {
                $('#officeUseTable').find('input, textarea, select').attr('disabled', 'disabled');
                $('select[name="Flagged"]').attr('disabled', 'disabled');
                $('input[name="DateFlagged"]').attr('disabled', 'disabled');
                $('input[name="BtnSubmit"]').hide();

            }

            if (successflagdetails) {
                $('#officeUseTable').find('input, textarea, select').attr('disabled', 'disabled');
                $('#pepdetailssection').find('input, textarea, select').attr('disabled', 'disabled');

                $('select[name="PrimarypepCountryLOB"]').each(function () { MakeMultiSelectReadOnly(this) });
                $('select[name="PrimarypepAssociatedCountryLOB"]').each(function () { MakeMultiSelectReadOnly(this) });
                $('select[name="EntityFormationCountryLOB"]').each(function () { MakeMultiSelectReadOnly(this) });
                $('select[name="CountryofcitizenshipLOB"]').each(function () { MakeMultiSelectReadOnly(this) });

　
　
                $('button.dropdown-toggle').attr('disabled', 'disabled');
                var dateflaggeddetails = $('input[name="DateFlagged"]');
                var flaggeddetails = $('select[name="Flagged"]');

　
                flaggeddetails.each(function () {

                    if ($(this).prop('value') == "") {
                        $(this).css('display', 'none');
                        $(this).parent().closest('div.row').find('div[name="lblFlagged"]').css('display', 'none');
                    }

                });

　
                dateflaggeddetails.each(function () {

                    if ($(this).val() == "") {
                        $(this).css('display', 'none');
                    }
                });
                $('#pepdetailssection').find('input.removeButton').hide();

            } //end of else (success)
        }
        $("#searchForm").on("click", function (ev) {
            ev.preventDefault();
            window.location.href = window.rootUrl + "PEPDetails/PEPDeterminationSearchForm";

        });

        if (((requeststatus == "Canceled") || (requeststatus == "RequestForCancellation")) && ($('#selectedRole').val() === "LOB - Line of Business(PEP)")) {
            $('#officeUseTable').find('input, textarea, select').attr('disabled', 'disabled');
            $('#pepdetailssection').find('input, textarea, select').attr('disabled', 'disabled');

            $('select[name="PrimarypepCountryLOB"]').each(function () { MakeMultiSelectReadOnly(this) });
            $('select[name="PrimarypepAssociatedCountryLOB"]').each(function () { MakeMultiSelectReadOnly(this) });
            $('select[name="EntityFormationCountryLOB"]').each(function () { MakeMultiSelectReadOnly(this) });
            $('select[name="CountryofcitizenshipLOB"]').each(function () { MakeMultiSelectReadOnly(this) });

　
　
            $('button.dropdown-toggle').attr('disabled', 'disabled');
            var dateflaggeddetails = $('input[name="DateFlagged"]');
            var flaggeddetails = $('select[name="Flagged"]');

　
            flaggeddetails.each(function () {

                if ($(this).prop('value') == "") {
                    $(this).css('display', 'none');
                    $(this).parent().closest('div.row').find('div[name="lblFlagged"]').css('display', 'none');
                }

            });

　
            dateflaggeddetails.each(function () {

                if ($(this).val() == "") {
                    $(this).css('display', 'none');
                }
            });
            $('#pepdetailssection').find('input.removeButton').hide();
            $("#Cancel").hide();
        }

        $('#pepid').attr('disabled', false);
        $('#pepid').attr('readOnly', true);
        $('#crid').attr('disabled', false);
        $('#crid').attr('readOnly', true);
        $('#crno').attr('disabled', false);
        $('#crno').attr('readOnly', true);
        $('#requeststatusid').attr('disabled', false);
        $('#requeststatusid').attr('readOnly', true);
        $('#requeststatustxtid').attr('disabled', false);
        $('#requeststatustxtid').attr('readOnly', true);
        if (!successflagdetails) {
            $('#additionalcommentsid').removeAttr("disabled");
            $('#additionalcommentsid').css('background', 'white');
        }
        else {
            $('#additionalcommentsid').attr('disabled', 'disabled');
            $('#additionalcommentsid').css('background', '#eee');
        }
    });

    function MakeMultiSelectReadOnly(select)
    {
        $(select).removeAttr('disabled');
        //$(select).css('background-color', '#eee');
        $(select).find('option:not(:selected)').remove();
        $(select).mousedown(function (e) { e.preventDefault(); return false; });
    }

    function ValidateDeterminationFields(select)
    {
        var hasErrorFlag = false;
        var isPepValue = $("#Pep").find(":selected").val();
        var pepTypeValue = $("select[name='PepTypeId']").find(":selected").val();
        var pepLevelValue = $("select[name='PepLevelId']").find(":selected").val();
        var hoganFlagDateValue = $("#flagdateid").val();
        var pepDeterminationCommentValue = $("#additionalcommentsid").val();
        $("#peptypeflagerror").css('display', 'none');
        $("#peplevelflagerror").css('display', 'none');
        $("#hoganflagdateflagerror").css('display', 'none');
        $("#determinationcommentsflagerror").css('display', 'none');
        $("#ispepflagerror").css('display', 'none');

　
        if ((isPepValue == "Y") && (pepTypeValue == "-1"))
        {
            $("#peptypeflagerror").css('display', 'block');
            hasErrorFlag = true;

        }

        if ((isPepValue == "Y") && (pepLevelValue == "-1"))
        {
            $("#peplevelflagerror").css('display', 'block');
            hasErrorFlag = true;

        }

        if ((isPepValue == "Y") && (hoganFlagDateValue == ""))
        {
            $("#hoganflagdateflagerror").css('display', 'block');
            hasErrorFlag = true;

        }

        if (pepDeterminationCommentValue == "")
        {
            $("#determinationcommentsflagerror").css('display', 'block');
            hasErrorFlag = true;

        }

        if (($(select).val() == "Submit") && ((isPepValue == "-1") || (isPepValue == "")))
        {
            $("#ispepflagerror").css('display', 'block');
            hasErrorFlag = true;

        }

        return !hasErrorFlag;

    }

    function PopulateMajorLOB(select) {

        var disabledMajorLob = $(select).parent().closest('div.row').find('input[name="MajorLOBtxt"]');

        //console.log(disabledMajorLob.html());
        var hiddenMajorLob = $(select).parent().closest('div.row').find('input[name="MajorLOB"]');
        //console.log(hiddenMajorLob.html());

        var targetValue = "";
        var vali = $(select).find(":selected");
        targetValue = vali.data("major-lob");
        disabledMajorLob.val(targetValue);
        hiddenMajorLob.val(targetValue);
    }

    function PopulateCountryRiskDesignation(select) {

        var disabledCountryRiskDesignation = $(select).parent().closest('div.row').find('input[name="PrimaryPepCountryRiskDesignationtxt"]');

        //console.log(disabledMajorLob.html());
        var hiddenCountryRiskDesignation = $(select).parent().closest('div.row').find('input[name="PrimaryPepCountryRiskDesignation"]');
        //console.log(hiddenMajorLob.html());

        var targetValue = "";
        var vali = $(select).find(":selected");
        targetValue = vali.data("risk-designation");
        disabledCountryRiskDesignation.val(targetValue);
        hiddenCountryRiskDesignation.val(targetValue);

        ShoworHidePrimaryPepCountryDivsOnRiskSelection(disabledCountryRiskDesignation);

    }

    function PopulateAssociatedCountryRiskDesignation(select) {

        var disabledCountryRiskDesignation = $(select).parent().closest('div.row').find('input[name="PrimaryPepAssociatedCountryRiskDesignationtxt"]');

        //console.log(disabledMajorLob.html());
        var hiddenCountryRiskDesignation = $(select).parent().closest('div.row').find('input[name="PrimaryPepAssociatedCountryRiskDesignation"]');
        //console.log(hiddenMajorLob.html());

        var targetValue = "";
        var vali = $(select).find(":selected");
        targetValue = vali.data("associatedcountryrisk-designation");
        disabledCountryRiskDesignation.val(targetValue);
        hiddenCountryRiskDesignation.val(targetValue);

        ShoworHidePrimaryPepAssociatedCountryDivsOnRiskSelection(disabledCountryRiskDesignation);

    }

    function PopulateEntityFormationCountryRiskDesignation(select) {

        var disabledCountryRiskDesignation = $(select).parent().closest('div.row').find('input[name="EntityFormationCountryRiskDesignationtxt"]');

        //console.log(disabledMajorLob.html());
        var hiddenCountryRiskDesignation = $(select).parent().closest('div.row').find('input[name="EntityFormationCountryRiskDesignation"]');
        console.log(hiddenCountryRiskDesignation.html());

        var targetValue = "";
        var vali = $(select).find(":selected");
        targetValue = vali.data("efrisk-designation");
        disabledCountryRiskDesignation.val(targetValue);
        hiddenCountryRiskDesignation.val(targetValue);

        ShoworHideEntityFormationCountryDivsOnRiskSelection(disabledCountryRiskDesignation);

    }

    function PopulateCountryofcitizenshipRiskDesignation(select) {

        var disabledCountryRiskDesignation = $(select).parent().closest('div.row').find('input[name="CountryofcitizenshipRiskDesignationtxt"]');

        //console.log(disabledMajorLob.html());
        var hiddenCountryRiskDesignation = $(select).parent().closest('div.row').find('input[name="CountryofcitizenshipRiskDesignation"]');
        console.log(hiddenCountryRiskDesignation.html());

        var targetValue = "";
        var vali = $(select).find(":selected");
        targetValue = vali.data("ccrisk-designation");
        disabledCountryRiskDesignation.val(targetValue);
        hiddenCountryRiskDesignation.val(targetValue);

        ShoworHideCountryofcitizenshipDivsOnRiskSelection(disabledCountryRiskDesignation);

    }

　
　
　
    function EnableCreditInvestigationAnalyst(select, targetFieldId, hiddenFieldId) {

        var targetValue = $(select).find(":selected").val();
        if (targetValue == "Y") {
            $("#" + targetFieldId).prop("disabled", false);
        }
        else {
            $("#" + targetFieldId).prop("disabled", true);
            $("#" + targetFieldId).val("");
            $("#" + hiddenFieldId).val("");
        }
    }

    function ShoworHideFlaggedDate(select) {
        $("#ecnflagerror").text("");
        var selectedValue = $(select).find(":selected").val();
        //if (selectedValue == "") {
        //    $("#ecnflagerror").text("Select some value");
        //    return;
        //}
        var disabledDateFlagged = $(select).parent().closest('div.row').find('input[name="DateFlagged"]');
        if (selectedValue == "Y") {
            disabledDateFlagged.css('display', 'block');
        }
        else {
            disabledDateFlagged.css('display', 'none');
            disabledDateFlagged.val("");
        }

    }

    function ShoworHideHoganFlaggedDate(select) {
        //$("#ecnflagerror").text("");
        var selectedValue = $(select).find(":selected").val();
        //if (selectedValue == "") {
        //    $("#ecnflagerror").text("Select some value");
        //    return;
        //}
        var disabledDateFlaggedLabel = $("#labelHoganFlagDate");
        var disabledDateFlagged = $(select).parent().closest('div.row').find('input[name="HoganFlagDate"]');
        if (selectedValue == "Y") {
            disabledDateFlagged.css('display', 'block');
            disabledDateFlaggedLabel.css('display', 'block');
        }
        else {
            disabledDateFlagged.css('display', 'none');
            disabledDateFlagged.val("");
            disabledDateFlaggedLabel.css('display', 'none');
        }

    }

　
    function ShoworHideDivs(select) {
        var selectedValue = $(select).find(":selected").val();

        if (selectedValue == "Y") {
            $("#isPEP1").css('display', 'block');
            $("#isPEP2").css('display', 'block');
            $("#notaPEP").css('display', 'none');

        }
        else if (selectedValue == "N") {
            $("#isPEP1").css('display', 'none');
            $("#isPEP2").css('display', 'none');
            $("#notaPEP").css('display', 'block');

            $('select[name="PepTypeId"]').val("-1");
            $('select[name="PepLevelId"]').val("-1");
            $('select[name="HoganFlagged"]').val("");

　
            $('input[name="HoganFlagDate"]').css('display', 'none');
            $('input[name="HoganFlagDate"]').val("");

            $("#labelHoganFlagDate").css('display', 'none');

            $('select[name="PepFlagStatusId"]').val("-1");
            $('input[name="FlagDate"]').prop('value', '');

        }
        else {
            $("#isPEP1").css('display', 'none');
            $("#isPEP2").css('display', 'none');
            $("#notaPEP").css('display', 'none');
            $('input[name="PepTypeId"]').prop('value', '');
            $('select[name="PepLevelId"]').val("-1");
            $('select[name="PepFlagStatusId"]').val("-1");
            $('input[name="FlagDate"]').prop('value', '');
        }
    }

　
    function ShoworHidePrimaryPepCountryDivsOnRiskSelection(select) {

        //var selectedValue = $(select).parent().closest('div.row').find('input[name="PrimaryPepCountryRiskDesignation"]');
        //var selectedValue = $(select).val();
        //alert(selectedValue);

　
        var selectedValue = $(select).val();
        var bsaApprovalDdl = $(select).parent().closest('div.innerRow').next().find('select[name="PrimaryPepBSAApproval"]');
        bsaApprovalDdl.val("-1");
        ShoworHidePrimaryPepCountryDivsOnBSAApprovalSelection(bsaApprovalDdl);

　
        //$(select).parent().closest('div.innerRow').next().find('select[name="PrimaryPepBSAApproval"]').val("-1");
        $(select).parent().closest('div.innerRow').next().find('select[name="PrimarypepCountryLOB"]').val("-1");
        $(select).parent().closest('div.innerRow').next().find('input[name="PrimaryPepCountryLobDate"]').val("");

　
        if (selectedValue == "High") {

            $(select).parent().closest('div.innerRow').next().find('div[data-id="bsaapprovallabel"]').css('display', 'block');
            $(select).parent().closest('div.innerRow').next().find('div[data-id="bsaapproval"]').css('display', 'block');

        }
        else {
            $(select).parent().closest('div.innerRow').next().find('div[data-id="bsaapprovallabel"]').css('display', 'none');
            $(select).parent().closest('div.innerRow').next().find('div[data-id="bsaapproval"]').css('display', 'none');
            $(select).parent().closest('div.innerRow').next().find('div[data-id="multiloblabel"]').css('display', 'none');
            $(select).parent().closest('div.innerRow').next().find('div[data-id="multilabel"]').css('display', 'none');
            $(select).parent().closest('div.innerRow').next().find('div[data-id="lobdate"]').css('display', 'none');

        }
    }

　
    function ShoworHideEntityFormationCountryDivsOnRiskSelection(select) {

        //var selectedValue = $(select).parent().closest('div.row').find('input[name="PrimaryPepCountryRiskDesignation"]');
        //var selectedValue = $(select).val();
        //alert(selectedValue);

        var selectedValue = $(select).val();
        var bsaApprovalDdl = $(select).parent().closest('div.innerRow').next().find('select[name="EntityFormationCountryBSAApproval"]');
        bsaApprovalDdl.val("-1");
        ShoworHideEntityFormationCountryDivsOnBSAApprovalSelection(bsaApprovalDdl);

　
        //$(select).parent().closest('div.innerRow').next().find('select[name="EntityFormationCountryBSAApproval"]').val("-1");
        $(select).parent().closest('div.innerRow').next().find('select[name="EntityFormationCountryLOB"]').val("-1");

　
        if (selectedValue == "High") {

            $(select).parent().closest('div.innerRow').next().find('div[data-id="efbsaapprovallabel"]').css('display', 'block');
            $(select).parent().closest('div.innerRow').next().find('div[data-id="efbsaapproval"]').css('display', 'block');

        }
        else {
            $(select).parent().closest('div.innerRow').next().find('div[data-id="efbsaapprovallabel"]').css('display', 'none');
            $(select).parent().closest('div.innerRow').next().find('div[data-id="efbsaapproval"]').css('display', 'none');
            $(select).parent().closest('div.innerRow').next().find('div[data-id="efmultiloblabel"]').css('display', 'none');
            $(select).parent().closest('div.innerRow').next().find('div[data-id="efmultilabel"]').css('display', 'none');

　
        }
    }

　
　
    function ShoworHideCountryofcitizenshipDivsOnRiskSelection(select) {

        //var selectedValue = $(select).parent().closest('div.row').find('input[name="PrimaryPepCountryRiskDesignation"]');
        //var selectedValue = $(select).val();
        //alert(selectedValue);

        var selectedValue = $(select).val();
        var bsaApprovalDdl = $(select).parent().closest('div.innerRow').next().find('select[name="CountryofcitizenshipBSAApproval"]');
        bsaApprovalDdl.val("-1");
        ShoworHideCountryofcitizenshipDivsOnBSAApprovalSelection(bsaApprovalDdl);
        //$(select).parent().closest('div.innerRow').next().find('select[name="CountryofcitizenshipBSAApproval"]').val("-1");
        $(select).parent().closest('div.innerRow').next().find('select[name="CountryofcitizenshipLOB"]').val("-1");

　
        if (selectedValue == "High") {

            $(select).parent().closest('div.innerRow').next().find('div[data-id="ccbsaapprovallabel"]').css('display', 'block');
            $(select).parent().closest('div.innerRow').next().find('div[data-id="ccbsaapproval"]').css('display', 'block');

        }
        else {
            $(select).parent().closest('div.innerRow').next().find('div[data-id="ccbsaapprovallabel"]').css('display', 'none');
            $(select).parent().closest('div.innerRow').next().find('div[data-id="ccbsaapproval"]').css('display', 'none');
            $(select).parent().closest('div.innerRow').next().find('div[data-id="ccmultiloblabel"]').css('display', 'none');
            $(select).parent().closest('div.innerRow').next().find('div[data-id="ccmultilabel"]').css('display', 'none');

　
        }
    }

　
　
　
    function ShoworHidePrimaryPepAssociatedCountryDivsOnRiskSelection(select) {

        var selectedValue = $(select).val();
        var bsaApprovalDdl = $(select).parent().closest('div.innerRow').next().find('select[name="PrimaryPepAssociatedCountryBSAApproval"]');
        bsaApprovalDdl.val("-1");
        ShoworHidePrimaryPepAssociatedCountryDivsOnBSAApprovalSelection(bsaApprovalDdl);
        $(select).parent().closest('div.innerRow').next().find('select[name="PrimarypepAssociatedCountryLOB"]').val("-1");
        $(select).parent().closest('div.innerRow').next().find('input[name="PrimaryPepAssociatedCountryLobDate"]').val("");

　
        if (selectedValue == "High") {

            $(select).parent().closest('div.innerRow').next().find('div[data-id="associatedcountrybsaapprovallabel"]').css('display', 'block');
            $(select).parent().closest('div.innerRow').next().find('div[data-id="associatedcountrybsaapproval"]').css('display', 'block');

        }
        else {
            $(select).parent().closest('div.innerRow').next().find('div[data-id="associatedcountrybsaapprovallabel"]').css('display', 'none');
            $(select).parent().closest('div.innerRow').next().find('div[data-id="associatedcountrybsaapproval"]').css('display', 'none');
            $(select).parent().closest('div.innerRow').next().find('div[data-id="associatedcountrymultiloblabel"]').css('display', 'none');
            $(select).parent().closest('div.innerRow').next().find('div[data-id="associatedcountrymultilabel"]').css('display', 'none');
            $(select).parent().closest('div.innerRow').next().find('div[data-id="associatedcountrylobdate"]').css('display', 'none');

        }
    }

　
　
　
　
    function ShoworHidePrimaryPepAssociatedCountryDivsOnBSAApprovalSelection(select) {

        var selectedValue = $(select).find(":selected").val();

        if (selectedValue == "1") {

            $(select).parent().closest('div.innerRow').find('select[name="PrimarypepAssociatedCountryLOB"]').val("-1");
            $(select).parent().closest('div.innerRow').find('input[name="PrimaryPepAssociatedCountryLobDate"]').val("");
            $(select).parent().closest('div.innerRow').find('div[data-id="associatedcountrymultiloblabel"]').css('display', 'block');
            $(select).parent().closest('div.innerRow').find('div[data-id="associatedcountrymultilabel"]').css('display', 'block');
            $(select).parent().closest('div.innerRow').find('div[data-id="associatedcountrylobdate"]').css('display', 'block');

        }
        else {
            $(select).parent().closest('div.innerRow').find('div[data-id="associatedcountrymultiloblabel"]').css('display', 'none');
            $(select).parent().closest('div.innerRow').find('div[data-id="associatedcountrymultilabel"]').css('display', 'none');
            $(select).parent().closest('div.innerRow').find('div[data-id="associatedcountrylobdate"]').css('display', 'none');

        }

    }

    function ShoworHidePrimaryPepCountryDivsOnBSAApprovalSelection(select) {

        var selectedValue = $(select).find(":selected").val();

        if (selectedValue == "1") {

            $(select).parent().closest('div.innerRow').find('select[name="PrimarypepCountryLOB"]').val("-1");
            $(select).parent().closest('div.innerRow').find('input[name="PrimaryPepCountryLobDate"]').val("");
            $(select).parent().closest('div.innerRow').find('div[data-id="multiloblabel"]').css('display', 'block');
            $(select).parent().closest('div.innerRow').find('div[data-id="multilabel"]').css('display', 'block');
            $(select).parent().closest('div.innerRow').find('div[data-id="lobdate"]').css('display', 'block');

　
            //$('select[name="PrimarypepCountryLOB"]').val("-1");
            //$('input[name="PrimaryPepCountryLobDate"]').val("");
            //$('div[data-id="multiloblabel"]').css('display', 'block');
            //$('div[data-id="multilabel"]').css('display', 'block');
            //$('div[data-id="lobdate"]').css('display', 'block');
        }
        else {
            $(select).parent().closest('div.innerRow').find('div[data-id="multiloblabel"]').css('display', 'none');
            $(select).parent().closest('div.innerRow').find('div[data-id="multilabel"]').css('display', 'none');
            $(select).parent().closest('div.innerRow').find('div[data-id="lobdate"]').css('display', 'none');

        }
    }

    function ShoworHideEntityFormationCountryDivsOnBSAApprovalSelection(select) {

        var selectedValue = $(select).find(":selected").val();

        if (selectedValue == "1") {

            $(select).parent().closest('div.innerRow').find('select[name="EntityFormationCountryLOB"]').val("-1");
            //$(select).parent().closest('div.innerRow').find('input[name="EntityFormationCountryLobDate"]').val("");
            $(select).parent().closest('div.innerRow').find('div[data-id="efmultiloblabel"]').css('display', 'block');
            $(select).parent().closest('div.innerRow').find('div[data-id="efmultilabel"]').css('display', 'block');

        }
        else {

            $(select).parent().closest('div.innerRow').find('div[data-id="efmultiloblabel"]').css('display', 'none');
            $(select).parent().closest('div.innerRow').find('div[data-id="efmultilabel"]').css('display', 'none');

        }
    }

　
    function ShoworHideCountryofcitizenshipDivsOnBSAApprovalSelection(select) {

        var selectedValue = $(select).find(":selected").val();

        if (selectedValue == "1") {

            $(select).parent().closest('div.innerRow').find('select[name="CountryofcitizenshipLOB"]').val("-1");
            $(select).parent().closest('div.innerRow').find('div[data-id="ccmultiloblabel"]').css('display', 'block');
            $(select).parent().closest('div.innerRow').find('div[data-id="ccmultilabel"]').css('display', 'block');

        }
        else {

            $(select).parent().closest('div.innerRow').find('div[data-id="ccmultiloblabel"]').css('display', 'none');
            $(select).parent().closest('div.innerRow').find('div[data-id="ccmultilabel"]').css('display', 'none');

        }
    }

　
    function ShoworHideOpenField(select) {

        var selectedValue = $(select).find(":selected").val();

        if (selectedValue == "36") {

            $(select).parent().closest('div.innerRow').find('input[name="PrimaryPepPositionOpenField"]').val("");
            $(select).parent().closest('div.innerRow').find('div[data-id="positionopenfield"]').css('display', 'block');
        }
        else {

            $(select).parent().closest('div.innerRow').find('div[data-id="positionopenfield"]').css('display', 'none');

        }
    }

　
　
　
　
　
    function AddEcn() {

        var ecnRowDiv = $("div[data-id='ecnrow']").last();

        var cloneRowDiv = ecnRowDiv.clone();
        cloneRowDiv.insertAfter(ecnRowDiv);
        cloneRowDiv.find('input[name="ECN"]').focus();
        cloneRowDiv.find("span.field-validation-error").hide();
        cloneRowDiv.find("div[data-id='ecnlabel']").html('ECN# - Secondary');
        cloneRowDiv.find("input[data-id='removeicon']").css('display', 'inline');
        $('input[name="DateFlagged"]').datepicker();

　
        var ecn1 = cloneRowDiv.find('input[name="ECN"]');
        ecn1.val("");
        //var hiddenMajorLob = cloneRowDiv.find('select[name="Flagged1"]');
        //hiddenMajorLob.val("");

        var dropdownflag = cloneRowDiv.find('select[name="Flagged"]');
        dropdownflag.val("");

        var flagdate = cloneRowDiv.find('input[name="DateFlagged"]');
        flagdate.val("");

        var countAddedEcn = $('input[name="ECN"]').length;
        if (countAddedEcn == 3) {
            $("#btnaddecn").prop('disabled', 'disabled');
        }
    }

　
    function RemoveEcn(select) {
        $(select).parent().closest('div.row').remove();

        var countAddedEcn = $('input[name="ECN"]').length;
        if (countAddedEcn != 3) {
            $("#btnaddecn").prop('disabled', false);

        }
    }

    function RemoveChip(lbl) {
        $(lbl).parent().closest('span').remove();

        var countAddedEcn = $('span.chiplbl').length;
        if (countAddedEcn != 4) {
            $("#btnaddecn").prop('disabled', false);
            $("#additionalecninput").prop('disabled', false);
        }
    }

    function IsECNDuplicate(ecnValue) {
        var ecn1 = $("#ecnid").val();
        if (ecn1 == ecnValue)
            return true;
        var ecnSpan = $('span[data-ecn="' + ecnValue + '"]');
        if (ecnSpan.length > 0)
            return true;
        return false;

    }

    function AddLOB() {

        var lobRowDiv = $("div[data-id='lobrow']").last();

        var cloneRowDiv = lobRowDiv.clone();
        cloneRowDiv.insertAfter(lobRowDiv);
        cloneRowDiv.find('select[name="LOB"]').focus();
        cloneRowDiv.find("span.field-validation-error").hide();
        cloneRowDiv.find("div[data-id='loblabel']").html('Line of Business');
        cloneRowDiv.find("input[data-id='removeicon']").css('display', 'inline');

        var disabledMajorLob = cloneRowDiv.find('input[name="MajorLOBtxt"]');
        disabledMajorLob.val("");
        var hiddenMajorLob = cloneRowDiv.find('input[name="MajorLOB"]');
        hiddenMajorLob.val("");

        var dropdownLob = cloneRowDiv.find('select[name="LOB"]');
        dropdownLob.val('-1');

        var countAddedLob = $('select[name="LOB"]').length;
        if (countAddedLob == 3) {
            $("#btnaddlob").prop('disabled', 'disabled');

        }

    }

    function RemoveLob(select) {
        $(select).parent().closest('div.row').remove();

        var countAddedLob = $('select[name="LOB"]').length;
        if (countAddedLob != 3) {
            $("#btnaddlob").prop('disabled', false);

        }
    }

　
    function AddPrimaryPep() {

        var primaryPepRowDiv = $("div[data-id='PrimaryPep']").last();

        var cloneRowDiv = primaryPepRowDiv.clone();
        cloneRowDiv.insertAfter(primaryPepRowDiv);
        cloneRowDiv.find('input[name="PrimaryPepLastName"]').focus();
        cloneRowDiv.find("span.field-validation-error").hide();
        cloneRowDiv.find("input[data-id='removeicon']").css('display', 'inline');

        cloneRowDiv.find('div[data-id="multiloblabel"]').css('display', 'none');
        cloneRowDiv.find('div[data-id="multilabel"]').css('display', 'none');
        cloneRowDiv.find('div[data-id="lobdate"]').css('display', 'none');
        cloneRowDiv.find('div[data-id="bsaapprovallabel"]').css('display', 'none');
        cloneRowDiv.find('div[data-id="bsaapproval"]').css('display', 'none');
        cloneRowDiv.find('div[data-id="positionopenfield"]').css('display', 'none');

        cloneRowDiv.find('div[data-id="associatedcountrymultiloblabel"]').css('display', 'none');
        cloneRowDiv.find('div[data-id="associatedcountrymultilabel"]').css('display', 'none');
        cloneRowDiv.find('div[data-id="associatedcountrylobdate"]').css('display', 'none');
        cloneRowDiv.find('div[data-id="associatedcountrybsaapprovallabel"]').css('display', 'none');
        cloneRowDiv.find('div[data-id="associatedcountrybsaapproval"]').css('display', 'none');

        //cloneRowDiv.find('input[name="PrimaryPepCountryLobDate"]').datepicker("destroy");
        cloneRowDiv.find('input[name="PrimaryPepCountryLobDate"]').removeClass("hasDatepicker").removeAttr('id');
        cloneRowDiv.find('input[name="PrimaryPepCountryLobDate"]').unbind();
        cloneRowDiv.find('input[name="PrimaryPepCountryLobDate"]').datepicker();

　
        cloneRowDiv.find('input[name="PrimaryPepAssociatedCountryLobDate"]').removeClass("hasDatepicker").removeAttr('id');
        cloneRowDiv.find('input[name="PrimaryPepAssociatedCountryLobDate"]').unbind();
        cloneRowDiv.find('input[name="PrimaryPepAssociatedCountryLobDate"]').datepicker();

　
        var txtLN = cloneRowDiv.find('input[name="PrimaryPepLastName"]');
        txtLN.val("");
        var txtLN2 = cloneRowDiv.find('input[name="PrimaryPepLastName2"]');
        txtLN2.val("");
        var txtMN = cloneRowDiv.find('input[name="PrimaryPepMiddleName"]');
        txtMN.val("");
        var txtFN = cloneRowDiv.find('input[name="PrimaryPepFirstName"]');
        txtFN.val("");
        var txtAKAN = cloneRowDiv.find('input[name="PrimaryPepAKAName"]');
        txtAKAN.val("");
        var dropdownCountry = cloneRowDiv.find('select[name="PepAssociatedCountry"]');
        dropdownCountry.val("-1");
        var dropdownPosition = cloneRowDiv.find('select[name="PrimaryPepPosition"]');
        dropdownPosition.val("-1");

        var hiddenAssociation = cloneRowDiv.find('input[name="PrimaryPepAssociation"]');
        hiddenAssociation.val("");

        var spanAssociation = cloneRowDiv.find("span.dropDownDisplayText");
        spanAssociation.html("");

        var dropdownpepcountry = cloneRowDiv.find('select[name="PrimaryPepCountry"]');
        dropdownpepcountry.val("-1");
        var dropdownriskdesignation = cloneRowDiv.find('input[name="PrimaryPepCountryRiskDesignationtxt"]');
        dropdownriskdesignation.val("");
        var dropdownriskdesignation = cloneRowDiv.find('input[name="PrimaryPepAssociatedCountryRiskDesignationtxt"]');
        dropdownriskdesignation.val("");

        var dropdownbsaapproval = cloneRowDiv.find('select[name="PrimaryPepBSAApproval"]');
        dropdownbsaapproval.val("-1");
        var dropdownbsaapproval = cloneRowDiv.find('select[name="PrimaryPepAssociatedCountryBSAApproval"]');
        dropdownbsaapproval.val("-1");

        var listcountrymultilob = cloneRowDiv.find('select[name="PrimarypepCountryLOB "]');
        listcountrymultilob.val("-1");
        var listcountrymultilob = cloneRowDiv.find('select[name="PrimarypepAssociatedCountryLOB "]');
        listcountrymultilob.val("-1");

　
        var countrymultilobdate = cloneRowDiv.find('input[name="PrimaryPepCountryLobDate"]');
        countrymultilobdate.val("");
        var countrymultilobdate = cloneRowDiv.find('input[name="PrimaryPepAssociatedCountryLobDate"]');
        countrymultilobdate.val("");

　
        $('button.dropdown-toggle').on("click", function (e) {
            $('.dropdown-submenu a.test').next('ul').hide();
        });
        $('.dropdown-submenu a.test').on("click", function (e) {
            $('.dropdown-submenu a.test').next('ul').hide();

            $(this).next('ul').toggle();
            e.stopPropagation();
            e.preventDefault();
        });

        var countAddedPrimaryPep = $('input[name="PrimaryPepFirstName"]').length;
        if (countAddedPrimaryPep == 3) {
            $("#btnaddprimarypep").prop('disabled', 'disabled');

        }

    }

    function RemovePrimaryPep(select) {
        $(select).parent().closest("div[data-id='PrimaryPep']").remove();

        var countAddedPrimaryPep = $('input[name="PrimaryPepFirstName"]').length;
        if (countAddedPrimaryPep != 3) {
            $("#btnaddprimarypep").prop('disabled', false);

        }
    }

    $('input[name=CustomerType]:radio').click(function () {

        var selectedRadioButtonValue = $('input[name=CustomerType]:radio:checked').val();

        if (selectedRadioButtonValue == "Entity") {
            $("div[data-id='EntityCustomer']").css('display', 'block');
            $("div[data-id='IndividualCustomer']").css('display', 'none');
            $('input[name="IndividualLastName"]').prop('value', '');
            $('input[name="IndividualLastName2"]').prop('value', '');
            $('input[name="IndividualMiddleName"]').prop('value', '');
            $('input[name="IndividualFirstName"]').prop('value', '');
            $('input[name="DateofBirth"]').prop('value', '');
            $('select[name="CountryofcitizenshipId"]').val("-1");
            $('input[name="CountryofcitizenshipRiskDesignationtxt"]').val("");
            $('div[data-id="ccbsaapprovallabel"]').css('display', 'none');
            $('div[data-id="ccbsaapproval"]').css('display', 'none');
            $('div[data-id="ccmultiloblabel"]').css('display', 'none');
            $('div[data-id="ccmultilabel"]').css('display', 'none');

　
        }

        else if (selectedRadioButtonValue == "Individual") {
            $("div[data-id='IndividualCustomer']").css('display', 'block');
            $("div[data-id='EntityCustomer']").css('display', 'none');
            $('input[name="PEPEntityName"]').prop('value', '');
            $('select[name="EntityFormationCountry"]').val("-1");

            $('input[name="EntityFormationCountryRiskDesignationtxt"]').val("");
            $('div[data-id="efbsaapprovallabel"]').css('display', 'none');
            $('div[data-id="efbsaapproval"]').css('display', 'none');
            $('div[data-id="efmultiloblabel"]').css('display', 'none');
            $('div[data-id="efmultilabel"]').css('display', 'none');

        }
    });

    function AssociationOptionClick(linkItem) {

        console.log(linkItem);
        var id = $(linkItem).attr("data-id");
        var linkText = $(linkItem).text();
        console.log(id);
        console.log(linkText);
        console.log($("#PEPAssociationOptionId"));
        var hiddenAssociationField = $(linkItem).parent().closest('div.row').find('input[name="PrimaryPepAssociation"]');
        hiddenAssociationField.val(id);
        $(linkItem).parent().closest('div.row').find("span.dropDownDisplayText").text(linkText);
    }

　
    $("#btnback").on("click", function (ev) {
        ev.preventDefault();
        var currentrole = $('#currentrole').val();
        if (currentrole == "LOB - Line of Business(PEP)") {
            window.location.href = window.rootUrl + "PEPDetails/LOBDasboardPage";
        }
        if (currentrole == "CPT- PEP Determination Team") {
            window.location.href = window.rootUrl + "PEPDetails/PDTDashboardPage";
        }
        if (currentrole == "CPT-Manager ") {
            window.location.href = window.rootUrl + "PEPDetails/PDTManagerDashboardPage";
        }
    });

    $("#Displaypep").click(function (event) {

        $('#pepdetailssection').toggle();
        var _this = $(this);
        var current = _this.attr("src");
        var swap = _this.attr("data-swap");
        _this.attr('src', swap).attr("data-swap", current);

    });
    $("#Displaypepoffice").click(function (event) {

        $('#panelbodyoffice').toggle();
        var _this = $(this);
        var current = _this.attr("src");
        var swap = _this.attr("data-swap");
        _this.attr('src', swap).attr("data-swap", current);

    });

    $("img.menu-down").click(function (event) {

        var _this = $(this);
        var current = _this.attr("src");
        var currentdatatarget = _this.attr("data-target");
        var targetselector = '#' + currentdatatarget;
        console.log(targetselector);
        $(targetselector).toggle();
        var swap = _this.attr("data-swap");
        _this.attr('src', swap).attr("data-swap", current);

    });

　
    $("#PrimaryPEPCountry").change(function () {
        //var end = this.value;
        $("#countryriskdesignation").show();
        var firstDropVal = $('#PrimaryPEPCountry option:selected').text();
    });

    $("#countryriskdesignation").change(function () {
        var value = $('#countryriskdesignation option:selected').text();
        if (value.toUpperCase() == "HIGH") {
            $("#bsaapproval").show();
        }
        else {
            $("#bsaapproval").hide();
        }
    });

    $("#bsaapproval").change(function () {
        var value = $('#bsaapproval option:selected').text();
        if (value.toUpperCase() == "YES") {
            $("#lob").show();
            $("#primarypepcountrylobdatediv").show();
        }
        else {
            $("#lob").hide();
            $("#primarypepcountrylobdatediv").hide();
        }
    });

　
　
    $("#PEPAssociatedCountry").change(function () {
        $("#associatedcountryriskdesignation").show();
        var firstDropVal = $('#PEPAssociatedCountry option:selected').text();
    });

    $("#associatedcountryriskdesignation").change(function () {
        var value = $('#associatedcountryriskdesignation option:selected').text();
        if (value.toUpperCase() == "HIGH") {
            $("#associatedcountrybsaapproval").show();
        }
        else {
            $("#associatedcountrybsaapproval").hide();
        }
    });

    $("#associatedcountrybsaapproval").change(function () {
        var value = $('#associatedcountrybsaapproval option:selected').text();
        if (value.toUpperCase() == "YES") {
            $("#lob").show();
            $("#primarypepassociatedcountrylobdatediv").show();
        }
        else {
            $("#lob").hide();
            $("#primarypepassociatedcountrylobdatediv").hide();
        }
    });

    $("#EntityFormationCountry").change(function () {
        $("#efriskdesignation").show();
        var firstDropVal = $('#EntityFormationCountry option:selected').text();
    });

    $("#efriskdesignation").change(function () {
        var value = $('#efriskdesignation option:selected').text();
        if (value.toUpperCase() == "HIGH") {
            $("#efbsaapproval").show();
        }
        else {
            $("#efbsaapproval").hide();
        }
    });

    $("#efbsaapproval").change(function () {
        var value = $('#efbsaapproval option:selected').text();
        if (value.toUpperCase() == "YES") {
            $("#lob").show();

        }
        else {
            $("#lob").hide();

        }
    });

　
    $("#CountryofcitizenshipId1").change(function () {
        $("#ccriskdesignation").show();
        var firstDropVal = $('#CountryofcitizenshipId1 option:selected').text();
    });

    $("#ccriskdesignation").change(function () {
        var value = $('#ccriskdesignation option:selected').text();
        if (value.toUpperCase() == "HIGH") {
            $("#ccbsaapproval").show();
        }
        else {
            $("#ccbsaapproval").hide();
        }
    });

    $("#ccbsaapproval").change(function () {
        var value = $('#ccbsaapproval option:selected').text();
        if (value.toUpperCase() == "YES") {
            $("#lob").show();
        }
        else {
            $("#lob").hide();
        }
    });

　
　
　
　
　
</script>
